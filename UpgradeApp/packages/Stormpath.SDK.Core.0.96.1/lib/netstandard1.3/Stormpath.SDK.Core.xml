<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Stormpath.SDK.Core</name>
    </assembly>
    <members>
        <member name="T:Stormpath.SDK.AccountCreationActionsCompatibilityExtensions">
            <summary>
            Provides backwards-compatibility for certain methods to comply with semver.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.AccountCreationActionsCompatibilityExtensions.CreateAccountAsync(Stormpath.SDK.Account.IAccountCreationActions,Stormpath.SDK.Account.IAccount,System.Action{Stormpath.SDK.Account.AccountCreationOptionsBuilder},System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> or <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.
            </summary>
            <param name="accountCreationActions">The interface.</param>
            <param name="account">The account to create/persist.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/>,
            which will be used when sending the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <example>
            If you would like to force disabling the backing directory's account registration workflow:
            <code>
            await IApplication.CreateAccountAsync(theAccount, options => options.RegistrationWorkflowEnabled = false, cancellationToken);
            </code>
            </example>
            <returns>The persisted account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> or <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> does not have a dedicated
             <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> or if the designated <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> does not allow new accounts to be created.</exception>
        </member>
        <member name="T:Stormpath.SDK.ApplicationCompatibilityExtensions">
            <summary>
            Provides backwards-compatibility for certain methods to comply with semver.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.ApplicationCompatibilityExtensions.AuthenticateAccountAsync(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Auth.UsernamePasswordRequestBuilder},System.Threading.CancellationToken)">
            <summary>
            Authenticates an account's submitted principals and credentials (e.g. username and password)
            against the specified account store.
            If the account does not exist in the account store, the authentication attempt will fail.
            </summary>
            <param name="application">The interface.</param>
            <param name="requestBuilder">Sets the login request parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Auth.IAuthenticationResult.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            To attempt to authenticate against a specific account store:
            <code>
            var result = await myApp.AuthenticateAccountAsync(request =>
            {
                request.SetUsernameOrEmail("jsmith");
                request.SetPassword("Password123#");
                request.SetAccountStore(myAccountStore);
            });
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.ApplicationCompatibilityExtensions.AuthenticateAccountAsync(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Auth.UsernamePasswordRequestBuilder},System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult}},System.Threading.CancellationToken)">
            <summary>
            Authenticates an account's submitted principals and credentials (e.g. username and password)
            against the specified account store.
            If the account does not exist in the account store, the authentication attempt will fail.
            </summary>
            <param name="application">The interface.</param>
            <param name="requestBuilder">Sets the login request parameters.</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Auth.IAuthenticationResult.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            To attempt to authenticate against a specific account store, and cache the returned account details:
            <code>
            var result = await myApp.AuthenticateAccountAsync(
                request =>
                {
                    request.SetUsernameOrEmail("jsmith");
                    request.SetPassword("Password123#");
                    request.SetAccountStore(myAccountStore);
                },
                response => response.Expand(x => x.GetAccountAsync));
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.ApplicationCompatibilityExtensions.SendVerificationEmailAsync(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Account.EmailVerificationRequestBuilder},System.Threading.CancellationToken)">
            <summary>
            Triggers the delivery of a new verification email for the specified account.
            </summary>
            <remarks>
            <para>
            This method is useful in scenarios where the Account Registration and Verification workflow
            is enabled. If the welcome email has not been received by a newly registered account,
            then the user will not be able to login until the account is verified.
            </para>
            <para>This method re-sends the verification email and allows the user to verify the account.</para>
            <para>
            The <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/> must contain the username or email identifying the account.
            </para>
            </remarks>
            <param name="application">The interface.</param>
            <param name="requestBuilderAction">Sets the options required for the verification email request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <seealso cref="M:Stormpath.SDK.Tenant.ITenantActions.VerifyAccountEmailAsync(System.String,System.Threading.CancellationToken)"/>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Stormpath.SDK.GroupCreationActionsCompatibilityExtensions">
            <summary>
            Provides backwards-compatibility for certain methods to comply with semver.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.GroupCreationActionsCompatibilityExtensions.CreateGroupAsync(Stormpath.SDK.Group.IGroupCreationActions,Stormpath.SDK.Group.IGroup,System.Action{Stormpath.SDK.Group.GroupCreationOptionsBuilder},System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> that may be used by the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> or <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.
            </summary>
            <param name="groupCreationActions">The interface.</param>
            <param name="group">The group to create.</param>
            <param name="creationOptionsAction">
            An inline builder for an instance of <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/>, which will be used when sending the request.
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.TenantActionsCompatibilityExtensions">
            <summary>
            Provides backwards-compatibility for certain methods to comply with semver.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.TenantActionsCompatibilityExtensions.CreateApplicationAsync(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Application.ApplicationCreationOptionsBuilder},System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> resource in the current tenant.
            </summary>
            <param name="tenantActions">The interface.</param>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/>,
            which will be used when sending the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the application.</exception>
        </member>
        <member name="M:Stormpath.SDK.TenantActionsCompatibilityExtensions.CreateDirectoryAsync(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Directory.IDirectory,System.Action{Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder},System.Threading.CancellationToken)">
            <summary>
            Creates a new Cloud- or Provider-based Directory resource in the Tenant.
            </summary>
            <param name="tenantActions">The interface.</param>
            <param name="directory">The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/>,
            which will be used when sending the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the directory.</exception>
        </member>
        <member name="M:Stormpath.SDK.TenantActionsCompatibilityExtensions.CreateOrganizationAsync(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Organization.IOrganization,System.Action{Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder},System.Threading.CancellationToken)">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> resource in the Tenant.
            </summary>
            <param name="tenantActions">The interface.</param>
            <param name="organization">The Organization to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/>,
            which will be used when sending the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="T:Stormpath.SDK.Account.AccountCreationOptionsBuilder">
            <summary>
            A builder to construct <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/> instances.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Account.AccountCreationOptionsBuilder.RegistrationWorkflowEnabled">
            <summary>
            Gets or sets whether to explicitly override the registration workflow of the Login Source for new Accounts.
            </summary>
            <value>
            <para>If set to <see langword="true"/>, the account registration workflow will be triggered no matter what the Login Source configuration is.</para>
            <para>If set to <see langword="false"/>, the account registration workflow will <b>NOT</b> be triggered, no matter what the Login Source configuration is.</para>
            <para>If you want to ensure the registration workflow behavior matches the Login Source default, leave this <see langword="null"/>.</para>
            </value>
        </member>
        <member name="P:Stormpath.SDK.Account.AccountCreationOptionsBuilder.PasswordFormat">
            <summary>
            Gets or sets the password format, used for importing passwords.
            </summary>
            <remarks>This value should be <see langword="null"/> unless you are importing existing password hashes into Stormpath.</remarks>
            <value>The password format.</value>
        </member>
        <member name="P:Stormpath.SDK.Account.AccountCreationOptionsBuilder.ResponseOptions">
            <summary>
            Gets the response options to apply to the request.
            </summary>
            <value>The response options to apply to the request.</value>
            <example>
            <code source="CreationOptionsBuilderExamples.cs" region="RequestCustomData" lang="C#" title="Request and cache Custom Data" />
            </example>
        </member>
        <member name="M:Stormpath.SDK.Account.AccountCreationOptionsBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/> based on the current builder state.</returns>
        </member>
        <member name="T:Stormpath.SDK.Account.EmailVerificationRequestBuilder">
            <summary>
            A builder to construct <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/> instances.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Account.EmailVerificationRequestBuilder.Login">
            <summary>
            Gets or sets the account's login information. Either the username or email identifying the desired account can be used.
            </summary>
            <value>The username or email identifying the account that will receive the verification email.</value>
        </member>
        <member name="P:Stormpath.SDK.Account.EmailVerificationRequestBuilder.AccountStore">
            <summary>
            Gets or sets the account store that will be used to locate the specified account.
            </summary>
            <value>The account store that will be used to locate the specified account.</value>
        </member>
        <member name="P:Stormpath.SDK.Account.EmailVerificationRequestBuilder.InternalDataStore">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Impl.DataStore.IInternalDataStore"/> used to construct this request.
            </summary>
            <value>The internal data store used by this client.</value>
        </member>
        <member name="M:Stormpath.SDK.Account.EmailVerificationRequestBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/> based on the current builder state.</returns>
        </member>
        <member name="T:Stormpath.SDK.Api.ClientApiKeys">
            <summary>
            Static entry point for working with <see cref="T:Stormpath.SDK.Api.IClientApiKey">Client API Key</see> objects.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Api.ClientApiKeys.Builder(Stormpath.SDK.Logging.ILogger)">
            <summary>
            Gets a new <see cref="T:Stormpath.SDK.Api.IClientApiKeyBuilder"/> instance, used to fluently construct <see cref="T:Stormpath.SDK.Api.IClientApiKey">Client API Key</see> instances to authenticate calls to Stormpath.
            </summary>
            <param name="logger">A logger instance for capturing trace output; pass <see langword="null"/> to disable logging.</param>
            <returns>A new <see cref="T:Stormpath.SDK.Api.IClientApiKeyBuilder"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder">
            <summary>
            A builder to construct <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/> instances.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder.CreateDirectory">
            <summary>
            Gets or sets a value indicating whether to create a new <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> along with the new Application.
            </summary>
            <value>
            <para>
            If <see langword="true"/>, a new Directory will be created. The new Directory will automatically be assigned as the Application's
            default Account and Group store.
            If the <see cref="P:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder.DirectoryName"/> property is not null, the new Directory will be created with that name.
            Otherwise, the Directory will be automatically named based on heuristics to ensure a guaranteed unique name based on the Application.
            </para>
            <para>
            If <see langword="false"/>, no Directory will be created.
            </para>
            </value>
        </member>
        <member name="P:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder.ResponseOptions">
            <summary>
            Gets the response options to apply to the request.
            </summary>
            <value>The response options to apply to the request.</value>
            <example>
            <code source="CreationOptionsBuilderExamples.cs" region="RequestCustomData" lang="C#" title="Request and cache Custom Data" />
            </example>
        </member>
        <member name="P:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder.DirectoryName">
            <summary>
            Gets or sets the name to use when creating a new <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> for this Application.
            </summary>
            <value>
            Default value: <see langword="null"/>.
            <para>The name to assign to the new Directory. This only has an effect if <see cref="P:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder.CreateDirectory"/> is <see langword="true"/>.</para>
            <para>If you want to have a default name assigned automatically, set this to <see cref="F:System.String.Empty"/> or <see langword="null"/>.</para>
            </value>
        </member>
        <member name="M:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Auth.ApiAuthenticationException">
            <summary>
            Represents an error that occurs while attempting to authenticate an <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Auth.ApiKeyRequestBuilder">
            <summary>
            Constructs an <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> given an API Key ID and Secret.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Auth.ApiKeyRequestBuilder.SetId(System.String)">
            <summary>
            Sets the API Key ID.
            </summary>
            <param name="id">The API Key ID.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.Auth.ApiKeyRequestBuilder.SetSecret(System.String)">
            <summary>
            Sets the API Key Secret.
            </summary>
            <param name="secret">The API Key Secret.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.Auth.ApiKeyRequestBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Auth.DisabledAccountException">
            <summary>
            Represents an error that occurs during API Authentication
            when the API Key is found, but the owning <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> is disabled.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Auth.DisabledAccountException.#ctor(Stormpath.SDK.Account.AccountStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Stormpath.SDK.Auth.DisabledAccountException"/> class.
            </summary>
            <param name="status">The account status.</param>
        </member>
        <member name="T:Stormpath.SDK.Auth.DisabledApiKeyException">
            <summary>
            Represents an error that occurs during API Authentication
            when the API Key is found, but it is <see cref="F:Stormpath.SDK.Api.ApiKeyStatus.Disabled">Disabled</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Auth.DisabledApiKeyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stormpath.SDK.Auth.DisabledApiKeyException"/> class.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Auth.IncorrectCredentialsException">
            <summary>
            Represents an error that occurs during API Authentication when the API Key is not found.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Auth.IncorrectCredentialsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Stormpath.SDK.Auth.IncorrectCredentialsException"/> class.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder">
            <summary>
            Constructs an <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> given a username and password.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder.SetUsernameOrEmail(System.String)">
            <summary>
            Sets the username or email address.
            </summary>
            <param name="usernameOrEmail">The username or email address.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder.SetPassword(System.String)">
            <summary>
            Sets the password.
            </summary>
            <param name="password">The password.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder.SetAccountStore(Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Sets the Account Store to use when locating the account.
            </summary>
            <param name="accountStore">The Account Store.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder.SetAccountStore(System.String)">
            <summary>
            Sets the Account Store href or Organization nameKey to use when locating the account.
            </summary>
            <param name="hrefOrNameKey">The href or nameKey.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Cache.CacheProviders">
            <summary>
            Static entry point for creating <see cref="T:Stormpath.SDK.Cache.ICacheProvider">cache provider</see> instances.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Cache.CacheProviders.Create">
            <summary>
            Gets a new <see cref="T:Stormpath.SDK.Cache.ICacheProviderFactory">factory</see> instance.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Cache.ICacheProviderFactory">factory</see> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Cache.Caches">
            <summary>
            Static entry point for working with <see cref="T:Stormpath.SDK.Cache.ICache">Cache</see> objects.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Cache.Caches.NewInMemoryCacheProvider">
            <summary>
            Instantiates a new <see cref="T:Stormpath.SDK.Cache.ICacheProviderBuilder"/> suitable for single-instance applications. If your application
            is deployed on multiple instances (e.g. for a distributed/clustered web application), you might not want to use this method
            and instead implement the <see cref="T:Stormpath.SDK.Cache.ICacheProvider">Cache Provider</see> API directly to use your distributed/clustered cache technology of choice.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Cache.ICacheProviderBuilder"/> suitable for single-instance applications.</returns>
        </member>
        <member name="M:Stormpath.SDK.Cache.Caches.NewDisabledCacheProvider">
            <summary>
            Instantiates a new <see cref="T:Stormpath.SDK.Cache.ICacheProvider">Cache Provider</see> that disables caching entirely.  While production applications
            will usually enable a working cache provider, you might configure a disabled cache provider for
            your Client when testing or debugging to remove 'moving parts' for better clarity into request/response behavior.
            </summary>
            <returns>A new disabled <see cref="T:Stormpath.SDK.Cache.ICacheProvider">Cache Provider</see> instance.</returns>
        </member>
        <member name="M:Stormpath.SDK.Cache.Caches.ForResource``1">
            <summary>
            Returns a new <see cref="T:Stormpath.SDK.Cache.ICacheConfigurationBuilder"/> to configure a cache region that will store data
            for instances of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The resource type to store in this cache region.</typeparam>
            <returns>A new <see cref="T:Stormpath.SDK.Cache.ICacheConfigurationBuilder"/> to configure a cache region that will store data
            for instances of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Client.Clients">
            <summary>
            Static entry point for working with <see cref="T:Stormpath.SDK.Client.IClient">Client</see> objects.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Client.Clients.Builder(System.String)">
            <summary>
            Gets a new <see cref="T:Stormpath.SDK.Client.IClientBuilder"/> instance, used to fluently construct <see cref="T:Stormpath.SDK.Client.IClient">Client</see> instances.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Client.IClientBuilder"/> instance.</returns>
            <example>
            <code source="ClientBuilderExamples.cs" region="DefaultClientOptions" lang="C#" title="Create a Client with the default options" />
            </example>
        </member>
        <member name="T:Stormpath.SDK.Client.ScopedClientFactory">
            <summary>
            A factory that can created scoped client instances from an existing <see cref="T:Stormpath.SDK.Client.IClient">Client</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Client.ScopedClientFactory.#ctor(Stormpath.SDK.Client.IClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Stormpath.SDK.Client.ScopedClientFactory"/> class based on an existing <see cref="T:Stormpath.SDK.Client.IClient">Client</see>.
            </summary>
            <param name="existing">The existing <see cref="T:Stormpath.SDK.Client.IClient">Client</see>.</param>
        </member>
        <member name="M:Stormpath.SDK.Client.ScopedClientFactory.Create(Stormpath.SDK.Client.ScopedClientOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder">
            <summary>
            A builder to construct <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> objects.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder.ForProvider(Stormpath.SDK.Provider.ICreateProviderRequest)">
            <summary>
            Specifies a Provider to create this Directory for.
            </summary>
            <param name="request">The Provider creation instance.</param>
            <returns>This instance for method chaining.</returns>
        </member>
        <member name="P:Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder.ResponseOptions">
            <summary>
            Gets the response options to apply to the request.
            </summary>
            <value>The response options to apply to the request.</value>
            <example>
            <code source="CreationOptionsBuilderExamples.cs" region="RequestCustomData" lang="C#" title="Request and cache Custom Data" />
            </example>
        </member>
        <member name="M:Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Group.GroupCreationOptionsBuilder">
            <summary>
            A builder to construct <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/> objects.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Group.GroupCreationOptionsBuilder.ResponseOptions">
            <summary>
            Gets the response options to apply to the request.
            </summary>
            <value>The response options to apply to the request.</value>
            <example>
            <code source="CreationOptionsBuilderExamples.cs" region="RequestCustomData" lang="C#" title="Request and cache Custom Data" />
            </example>
        </member>
        <member name="M:Stormpath.SDK.Group.GroupCreationOptionsBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Group.IGroupCreationActionsSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Group.IGroupCreationActions"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Group.IGroupCreationActionsSync.CreateGroup(Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronous counterpart to <c>IGroupCreationActions.CreateGroupAsync(IGroup, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="group">The group to create.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Group.IGroupCreationActionsSync.CreateGroup(Stormpath.SDK.Group.IGroup,System.Action{Stormpath.SDK.Group.GroupCreationOptionsBuilder})">
            <summary>
            Synchronous counterpart to <c>IGroupCreationActions.CreateGroupAsync(IGroup, Action{GroupCreationOptionsBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="group">The group to create.</param>
            <param name="creationOptionsAction">
            An inline builder for an instance of <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/>, which will be used when sending the request.
            </param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Group.IGroupCreationActionsSync.CreateGroup(Stormpath.SDK.Group.IGroup,Stormpath.SDK.Group.IGroupCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroupCreationActions.CreateGroupAsync(Stormpath.SDK.Group.IGroup,Stormpath.SDK.Group.IGroupCreationOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="group">The group to create.</param>
            <param name="creationOptions">An <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/> instance to use when sending the request.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Group.IGroupCreationActionsSync.CreateGroup(System.String,System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroupCreationActions.CreateGroupAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="name">The new Group's name.</param>
            <param name="description">The new Group's description text.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Http.HttpClientFactoryAutodetectExtensions">
            <summary>
            Provides access to the plugin autodetection behavior.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Http.HttpClientFactoryAutodetectExtensions.AutoDetect(Stormpath.SDK.Http.IHttpClientFactory)">
            <summary>
            Automatically detects the HTTP client plugin to use.
            </summary>
            <param name="factory">The plugin factory.</param>
            <returns>A builder capable of building <see cref="T:Stormpath.SDK.Http.IHttpClient"/> instances.</returns>
        </member>
        <member name="T:Stormpath.SDK.Http.HttpClients">
            <summary>
            Static entry point for creating <see cref="T:Stormpath.SDK.Http.IHttpClient">HTTP client</see> instances.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Http.HttpClients.Create">
            <summary>
            Gets a new <see cref="T:Stormpath.SDK.Http.IHttpClientFactory">factory</see> instance.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Http.IHttpClientFactory">factory</see> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Http.HttpRequests">
            <summary>
            Utility factory class for creating <see cref="T:Stormpath.SDK.Http.IHttpRequest"/> instances.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Http.HttpRequests.NewRequestDescriptor">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Http.IHttpRequestBuilder"/>, used to construct <see cref="T:Stormpath.SDK.Http.IHttpRequest"/> instances that represent HTTP requests.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Http.IHttpRequestBuilder"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.AccountCreationActionsShared">
            <summary>
            Both <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> and <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> implement
            <see cref="T:Stormpath.SDK.Account.IAccountCreationActions"/>, so this shared class wraps the methods up in a DRY way.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IAccountCreationActionsSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Account.IAccountCreationActions"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountCreationActionsSync.CreateAccount(Stormpath.SDK.Account.IAccount,System.Action{Stormpath.SDK.Account.AccountCreationOptionsBuilder})">
            <summary>
            Synchronous counterpart to <c>IAccountCreationActions.CreateAccountAsync(IAccount, Action{AccountCreationOptionsBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="account">The account to create/persist.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/>,
            which will be used when sending the request.</param>
            <returns>The persisted account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountCreationActionsSync.CreateAccount(Stormpath.SDK.Account.IAccount,Stormpath.SDK.Account.IAccountCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccountCreationActions.CreateAccountAsync(Stormpath.SDK.Account.IAccount,Stormpath.SDK.Account.IAccountCreationOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="account">The account to create/persist.</param>
            <param name="creationOptions">An <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/> instance to use when sending the request.</param>
            <returns>The persisted account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountCreationActionsSync.CreateAccount(Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccountCreationActions.CreateAccountAsync(Stormpath.SDK.Account.IAccount,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="account">The account to create/persist.</param>
            <returns>The persisted account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountCreationActionsSync.CreateAccount(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccountCreationActions.CreateAccountAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="givenName">The given name (aka 'first name' in Western cultures).</param>
            <param name="surname">The surname (aka 'last name' in Western cultures).</param>
            <param name="email">The account's email address, which must be unique among all other accounts within a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</param>
            <param name="password">The account's raw (plaintext) password.</param>
            <param name="customData">An anonymous type containing name/value pairs to be stored in this account's <see cref="T:Stormpath.SDK.CustomData.ICustomData">Custom Data</see>.</param>
            <returns>The persisted account.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IAccountSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.GetDirectory">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.GetDirectoryAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Directory.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.AddGroup(Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.AddGroupAsync(Stormpath.SDK.Group.IGroup,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="group">The Group this account will be added to.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created reflecting the account-to-group association.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.AddGroup(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.AddGroupAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="hrefOrName">The <c>href</c> or name of the group to add.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created reflecting the account-to-group association.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.RemoveGroup(Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.RemoveGroupAsync(Stormpath.SDK.Group.IGroup,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="group">The group object from which the account must be removed.</param>
            <returns><see langword="true"/> if the operation succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.RemoveGroup(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.RemoveGroupAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="hrefOrName">The <c>href</c> or name of the group object from which the account must be removed.</param>
            <returns><see langword="true"/> if the operation succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.IsMemberOfGroup(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.IsMemberOfGroupAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="hrefOrName">The <c>href</c> or name of the group to check.</param>
            <returns><see langword="true"/> if the account belongs to the specified group.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.GetProviderData">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.GetProviderDataAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The provider data.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.CreateApiKey">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.CreateApiKeyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The new API Key.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IAccountSync.CreateApiKey(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Api.IApiKey}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IAccount.CreateApiKeyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <param name="retrievalOptionsAction">The options to apply to the request.</param>
            <returns>The new API Key.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IChallengeCollectionSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on the <see cref="T:Stormpath.SDK.Account.IChallengeCollection">Challenge collection</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IChallengeCollectionSync.Add">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IChallengeCollection.AddAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The newly-created challenge.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IChallengeCollectionSync.Add(Stormpath.SDK.Account.ChallengeCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IChallengeCollection.AddAsync(Stormpath.SDK.Account.ChallengeCreationOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="options">The challenge options.</param>
            <returns>The newly-created challenge.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IChallengeSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on the <see cref="T:Stormpath.SDK.Account.IChallenge">Challenge</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IChallengeSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IChallenge.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IChallengeSync.GetFactor">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IChallenge.GetFactorAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The factor.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IChallengeSync.Submit(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IChallenge.SubmitAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>The <see cref="P:Stormpath.SDK.Account.IChallenge.Status"/> property will be updated with the result of the code submission.</remarks>
            <param name="code">The code.</param>
            <returns>The updated resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IChallengeSync.Validate(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IChallenge.ValidateAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>Identical to the <see cref="M:Stormpath.SDK.Impl.Account.IChallengeSync.Submit(System.String)"/> method, other than the return semantics.</remarks>
            <param name="code">The code.</param>
            <returns><see langword="true"/> if the challenge was successful; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IEmailVerificationRequestSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IEmailVerificationRequestSync.GetAccountStore">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used for this request.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>, or <see langword="null"/> if no Account Store was set.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IFactorCollectionSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Account.IFactorCollection"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IFactorCollectionSync.Add(Stormpath.SDK.Account.SmsFactorCreationOptions)">
            <summary>
            Adds a new SMS Factor.
            </summary>
            <param name="options">The options for the new factor.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IFactorCollectionSync.Add(Stormpath.SDK.Account.GoogleAuthenticatorFactorCreationOptions)">
            <summary>
            Adds a new Google Authenticator (TOTP-based) Factor.
            </summary>
            <param name="options">The options for the new factor.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IFactorSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on the <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IFactorSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IFactor.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IFactorSync.GetMostRecentChallenge">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IFactor.GetMostRecentChallengeAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The most recent challenge, or <see langword="null"/>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.IPasswordResetTokenSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IPasswordResetTokenSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Impl.Account.IPasswordResetTokenSync.GetAccount"/>.
            </summary>
            <returns>The Account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IPhoneCollectionSync.Add(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IPhoneCollection.AddAsync(System.String,System.Threading.CancellationToken)"/>
            </summary>
            <param name="number">The phone number.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IPhoneCollectionSync.Add(Stormpath.SDK.Account.PhoneCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IPhoneCollection.AddAsync(Stormpath.SDK.Account.PhoneCreationOptions,System.Threading.CancellationToken)"/>
            </summary>
            <param name="options">The phone creation options.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.IPhoneSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.IPhone.GetAccountAsync(System.Threading.CancellationToken)"/>
            </summary>
            <returns>The account.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Account.ISmsFactorSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on the <see cref="T:Stormpath.SDK.Account.ISmsFactor">SMS Factor</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Account.ISmsFactorSync.GetPhone">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Account.ISmsFactor.GetPhoneAsync(System.Threading.CancellationToken)"/>
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see> associated with this factor.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared">
            <summary>
            Contains shared methods for manipulating AccountStores.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.GetDefaultStoreAsync``1(System.String,Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore,System.Threading.CancellationToken)">
            <summary>
            Gets the default Account or Group Store at the given <c>href</c>, if it exists.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="storeMappingHref">The AccountStoreMapping <c>href</c>.</param>
            <param name="internalDataStore">The <see cref="T:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore"/>.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>, or <see langword="null"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.GetDefaultStore``1(System.String,Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore)">
            <summary>
            Synchronously gets the default Account or Group Store at the given <c>href</c>, if it exists.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="accountStoreMappingHref">The AccountStoreMapping <c>href</c>.</param>
            <param name="internalDataStore">The <see cref="T:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore"/>.</param>
            <returns>The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>, or <see langword="null"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.SetDefaultStoreAsync``2(Stormpath.SDK.Resource.ISaveable{``0},Stormpath.SDK.AccountStore.IAccountStore,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Sets the default Account or Group store.
            </summary>
            <typeparam name="T">The parent resource type.</typeparam>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="parent">The parent resource.</param>
            <param name="store">The new default Account or Group store.</param>
            <param name="isAccountStore">Determines whether this store should be the default Account (<see langword="true"/>) or Group (<see langword="false"/>) Store.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.SetDefaultStore``2(Stormpath.SDK.Resource.ISaveable{``0},Stormpath.SDK.AccountStore.IAccountStore,System.Boolean)">
            <summary>
            Synchronously sets the default Account or Group store.
            </summary>
            <typeparam name="T">The parent resource type.</typeparam>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="parent">The parent resource.</param>
            <param name="store">The new default Account or Group store.</param>
            <param name="isAccountStore">Determines whether this store should be the default Account (<see langword="true"/>) or Group (<see langword="false"/>) Store.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.CreateAccountStoreMappingAsync``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore,Stormpath.SDK.AccountStore.IAccountStoreMapping{``0},System.Threading.CancellationToken)">
            <summary>
            Creates a new Account Store Mapping.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="mapping">The new mapping to create.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.CreateAccountStoreMapping``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore,Stormpath.SDK.AccountStore.IAccountStoreMapping{``0})">
            <summary>
            Synchronously creates a new Account Store Mapping.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="mapping">The new mapping to create.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.AddAccountStoreAsync``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore,Stormpath.SDK.AccountStore.IAccountStore,System.Threading.CancellationToken)">
            <summary>
            Adds an Account Store to this resource.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="accountStore">The Account Store to add.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.AddAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore,Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronously adds an Account Store to this resource.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="accountStore">The Account Store to add.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.AddAccountStoreAsync``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore,System.String,System.Threading.CancellationToken)">
            <summary>
            Adds an Account Store to this resource by <c>href</c> or name.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="hrefOrName">The name or <c>href</c> of the Account Store to add.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.AddAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore,System.String)">
            <summary>
            Synchronously adds an Account Store to this resource by <c>href</c> or name.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="hrefOrName">The name or <c>href</c> of the Account Store to add.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.AddAccountStoreAsync``2(Stormpath.SDK.AccountStore.IAccountStoreContainer{``1},Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore,System.Func{Stormpath.SDK.Linq.IAsyncQueryable{``0},Stormpath.SDK.Linq.IAsyncQueryable{``0}},System.Threading.CancellationToken)">
            <summary>
            Adds an Account Store to this resource based on the result of a query.
            </summary>
            <typeparam name="T">The Account Store type.</typeparam>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="query">A query that selects a single Account Store.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.AddAccountStore``2(Stormpath.SDK.AccountStore.IAccountStoreContainer{``1},Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore,System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>
            Synchronously adds an Account Store to this resource based on the result of a query.
            </summary>
            <typeparam name="T">The Account Store type.</typeparam>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="internalDataStore">The internal data store.</param>
            <param name="query">A query that selects a single Account Store.</param>
            <returns>The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.GetSingleTenantDirectoryAsync(Stormpath.SDK.Tenant.IHasTenant,System.Func{Stormpath.SDK.Linq.IAsyncQueryable{Stormpath.SDK.Directory.IDirectory},Stormpath.SDK.Linq.IAsyncQueryable{Stormpath.SDK.Directory.IDirectory}},System.Threading.CancellationToken)">
            <summary>
            Gets a single <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> from a query.
            </summary>
            <param name="parent">The parent resource that contains a link to a <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>.</param>
            <param name="queryAction">The query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The located <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.GetSingleTenantDirectory(Stormpath.SDK.Tenant.IHasTenant,System.Func{System.Linq.IQueryable{Stormpath.SDK.Directory.IDirectory},System.Linq.IQueryable{Stormpath.SDK.Directory.IDirectory}})">
            <summary>
            Synchronously gets a single <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> from a query.
            </summary>
            <param name="parent">The parent resource that contains a link to a <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>.</param>
            <param name="queryAction">The query.</param>
            <returns>The located <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.GetSingleTenantGroupAsync(Stormpath.SDK.Tenant.IHasTenant,System.Func{Stormpath.SDK.Linq.IAsyncQueryable{Stormpath.SDK.Group.IGroup},Stormpath.SDK.Linq.IAsyncQueryable{Stormpath.SDK.Group.IGroup}},System.Threading.CancellationToken)">
            <summary>
            Gets a single <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> from a query.
            </summary>
            <param name="parent">The parent resource that contains a link to a <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>.</param>
            <param name="queryAction">The query.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The located <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.GetSingleTenantGroup(Stormpath.SDK.Tenant.IHasTenant,System.Func{System.Linq.IQueryable{Stormpath.SDK.Group.IGroup},System.Linq.IQueryable{Stormpath.SDK.Group.IGroup}})">
            <summary>
            Synchronously gets a single <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> from a query.
            </summary>
            <param name="parent">The parent resource that contains a link to a <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>.</param>
            <param name="queryAction">The query.</param>
            <returns>The located <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.AccountStoreContainerShared.SetContainer``1(Stormpath.SDK.AccountStore.IAccountStoreMapping{``0},Stormpath.SDK.AccountStore.IAccountStoreContainer{``0})">
            <summary>
            TODO: Remove this when refactoring AbstractAccountStoreMapping (breaking change)
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="mapping">The account store mapping.</param>
            <param name="container">The container object (an Application or Organization).</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreContainer`1"/>.
            </summary>
            <typeparam name="T">The Account Store Mapping type.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.GetDefaultAccountStore">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.GetDefaultAccountStoreAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The default Account store, or <see langword="null"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.SetDefaultAccountStore(Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.SetDefaultAccountStoreAsync(Stormpath.SDK.AccountStore.IAccountStore,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="accountStore">The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used to persist new accounts.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.GetDefaultGroupStore">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.GetDefaultGroupStoreAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The default Group store, or <see langword="null"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.SetDefaultGroupStore(Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.SetDefaultGroupStoreAsync(Stormpath.SDK.AccountStore.IAccountStore,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="accountStore">The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used to persist new groups.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.CreateAccountStoreMapping(`0)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.CreateAccountStoreMappingAsync(`0,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="mapping">The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/> resource to add to the AccountStoreMapping list.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.AddAccountStore(Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.AddAccountStoreAsync(Stormpath.SDK.AccountStore.IAccountStore,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="accountStore">The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> resource to add to the AccountStoreMapping list.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.AddAccountStore(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.AddAccountStoreAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="hrefOrName">Either the <c>href</c> or name of the desired <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> or <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreContainerSync`1.AddAccountStore``1(System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreContainer`1.AddAccountStoreAsync``1(System.Func{Stormpath.SDK.Linq.IAsyncQueryable{``0},Stormpath.SDK.Linq.IAsyncQueryable{``0}},System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="TSource">The type of resource (either a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> or a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>) to query for.</typeparam>
            <param name="query">Query to search for a resource of type <typeparamref name="TSource"/> in the current Tenant.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>, or <see langword="null"/> if there is no resource matching the query.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.AccountStore.IAccountStoreMappingSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping`1">Account Store Mapping</see>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.AccountStore.IAccountStoreMappingSync`1">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping`1">Account Store Mapping</see>.
            </summary>
            <typeparam name="T">The Account Store type.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreMappingSync`1.GetAccountStore">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreMapping`1.GetAccountStoreAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Account Store.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.AccountStore.IAccountStoreMappingSync`1.GetApplication">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.AccountStore.IAccountStoreMapping`1.GetApplicationAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Application.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.AccountStore.IAccountStoreSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Api.IApiKeySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Api.IApiKey"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Api.IApiKeySync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Api.IApiKey.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to which the API Key belongs.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Application.IApplicationAccountStoreMappingSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Application.IApplicationAccountStoreMapping"/>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Application.IApplicationSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.AuthenticateAccount(Stormpath.SDK.Auth.IAuthenticationRequest)">
            <summary>
            Synchronous counterpart to <c>IApplication.AuthenticateAccountAsync(IAuthenticationRequest, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="request">Any supported <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> object (e.g. created by <see cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>).</param>
            <returns>The result of the authentication.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.AuthenticateAccount(Stormpath.SDK.Auth.IAuthenticationRequest,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.AuthenticateAccountAsync(Stormpath.SDK.Auth.IAuthenticationRequest,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="request">Any supported <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> object (e.g. created by <see cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>).</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>The result of the authentication.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.AuthenticateAccount(System.Action{Stormpath.SDK.Auth.UsernamePasswordRequestBuilder})">
            <summary>
            Synchronous counterpart to <c>IApplication.AuthenticateAccountAsync(Action{UsernamePasswordRequestBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="requestBuilder">Sets the login request parameters.</param>
            <returns>The result of the authentication.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.AuthenticateAccount(System.Action{Stormpath.SDK.Auth.UsernamePasswordRequestBuilder},System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult}})">
            <summary>
            Synchronous counterpart to <c>IApplication.AuthenticateAccountAsync(Action{UsernamePasswordRequestBuilder}, Action{IRetrievalOptions{IAuthenticationResult}}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="requestBuilder">Sets the login request parameters.</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>The result of the authentication.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.AuthenticateAccount(System.String,System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.AuthenticateAccountAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="username">The account's username.</param>
            <param name="password">The account's raw (plaintext) password.</param>
            <returns>The result of the authentication.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.TryAuthenticateAccount(System.String,System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.TryAuthenticateAccountAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="username">The account's username.</param>
            <param name="password">The account's raw (plaintext) password</param>
            <returns><see langword="true"/> if the authentication attempt succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.ExecuteOauthRequest(Stormpath.SDK.Oauth.AbstractOauthGrantRequest)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.ExecuteOauthRequestAsync(Stormpath.SDK.Oauth.AbstractOauthGrantRequest,System.Threading.CancellationToken)"/>
            </summary>
            <param name="request">The request.</param>
            <returns>An <see cref="T:Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult">OAuth 2.0 response</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.SendVerificationEmail(System.Action{Stormpath.SDK.Account.EmailVerificationRequestBuilder})">
            <summary>
            Synchronous counterpart to <c>IApplication.SendVerificationEmailAsync(Action{EmailVerificationRequestBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="requestBuilderAction">Sets the options required for the verification email request.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.SendVerificationEmail(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.SendVerificationEmailAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="usernameOrEmail">The username or email identifying the account to send the verification email to.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.NewIdSiteSyncCallbackHandler(Stormpath.SDK.Http.IHttpRequest)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.NewIdSiteAsyncCallbackHandler(Stormpath.SDK.Http.IHttpRequest)"/>.
            </summary>
            <param name="request">
            An instance of <see cref="T:Stormpath.SDK.Http.IHttpRequest"/>.
            See the <see cref="T:Stormpath.SDK.Http.HttpRequests"/> helper class to help build this from an existing request.
            </param>
            <returns>An <see cref="T:Stormpath.SDK.IdSite.IIdSiteAsyncCallbackHandler"/> that allows you customize how the <paramref name="request"/> will be handled.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.ResetPassword(System.String,System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.ResetPasswordAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="token">The verification token, usually obtained as a request parameter by your application.</param>
            <param name="newPassword">The new password that will be set to the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> if the token is successfully validated.</param>
            <returns>The Account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.SendPasswordResetEmail(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.SendPasswordResetEmailAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="email">An email address of an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the application.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.SendPasswordResetEmail(System.String,Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.SendPasswordResetEmailAsync(System.String,Stormpath.SDK.AccountStore.IAccountStore,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="email">An email address of an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the application.</param>
            <param name="accountStore">The AccountStore expected to contain an account with the specified email address.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.SendPasswordResetEmail(System.String,System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.SendPasswordResetEmailAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="email">An email address of an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the application.</param>
            <param name="hrefOrNameKey">The href of the AccountStore, or the name key of the Organization, expected to contain an account with the specified email address.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.VerifyPasswordResetToken(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.VerifyPasswordResetTokenAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="token">The verification token, usually obtained as a request parameter by your application.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> matching the specified token.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.GetAccount(Stormpath.SDK.Provider.IProviderAccountRequest)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.GetAccountAsync(Stormpath.SDK.Provider.IProviderAccountRequest,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="request">
            The <see cref="T:Stormpath.SDK.Provider.IProviderAccountRequest"/> representing the Provider-specific account access data
            (e.g. an <c>accessToken</c>) used to verify the identity.
            </param>
            <returns>The result of the access request.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.GetOauthPolicy">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.GetOauthPolicyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy">OauthPolicy</see> associated with this <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.GetSamlPolicy">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.GetSamlPolicyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Saml.ISamlPolicy">SAML Policy</see> associated with this <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.NewSamlIdpUrlBuilder">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.NewSamlIdpUrlBuilderAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Saml.ISamlIdpUrlBuilder"/> that can build a URL to redirect your users to a SAML Identity Provider.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.NewSamlSyncCallbackHandler(Stormpath.SDK.Http.IHttpRequest)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.NewSamlAsyncCallbackHandler(Stormpath.SDK.Http.IHttpRequest)"/>.
            </summary>
            <param name="request">
            An instance of <see cref="T:Stormpath.SDK.Http.IHttpRequest"/>.
            See the <see cref="T:Stormpath.SDK.Http.HttpRequests"/> helper class to help build this from an existing request.
            </param>
            <returns>A new <see cref="T:Stormpath.SDK.Saml.ISamlSyncCallbackHandler"/> that allows your to customize how the <paramref name="request"/> will be handled.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.GetApiKey(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.GetApiKeyAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="apiKeyId">The API Key ID.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="apiKeyId"/> is null or empty.</exception>
            <returns>The API Key, or <see langword="null"/> if no API Key could be found.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Application.IApplicationSync.GetApiKey(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Api.IApiKey}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Application.IApplication.GetApiKeyAsync(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Api.IApiKey}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="apiKeyId">The API Key ID.</param>
            <param name="retrievalOptionsAction">The options to apply to the request.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="apiKeyId"/> is null or empty.</exception>
            <returns>The API Key, or <see langword="null"/> if no API Key could be found.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Auth.IAuthenticationResultSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Auth.IAuthenticationResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Auth.IAuthenticationResultSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Auth.IAuthenticationResult.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Account.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Auth.IBasicLoginAttempt">
            <summary>
            Represents a basic authentication request.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Auth.IBasicLoginAttempt.Value">
            <summary>
            Gets the value of the authorization request.
            </summary>
            <value>The authorization request value.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Auth.IBasicLoginAttempt.SetValue(System.String)">
            <summary>
            Sets the authorization request value.
            </summary>
            <param name="value">The request value.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Auth.IHasOrganizationNameKey">
            <summary>
            Represents an Organization nameKey.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Auth.IHasOrganizationNameKey.OrganizationNameKey">
            <summary>
            Gets the Organization nameKey value.
            </summary>
            <value>The nameKey.</value>
        </member>
        <member name="T:Stormpath.SDK.Impl.Auth.ILoginAttempt">
            <summary>
            Represents an abstract login attempt against an Account Store.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Auth.ILoginAttempt.Type">
            <summary>
            Gets the login attempt type.
            </summary>
            <value>The login attempt type.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Auth.ILoginAttempt.AccountStore">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> this login will be performed against.
            </summary>
            <value>The Account Store this login will be performed against.
            If <see langword="null"/>, the login request will use the default Stormpath login flow.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Auth.ILoginAttempt.SetType(System.String)">
            <summary>
            Sets the <see cref="P:Stormpath.SDK.Impl.Auth.ILoginAttempt.Type"/>.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Auth.ILoginAttempt.SetAccountStore(Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Sets the <see cref="P:Stormpath.SDK.Impl.Auth.ILoginAttempt.AccountStore"/>.
            </summary>
            <param name="accountStore">The Account Store.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Auth.ILoginAttempt.SetAccountStore(System.String)">
            <summary>
            Sets the <see cref="P:Stormpath.SDK.Impl.Auth.ILoginAttempt.AccountStore"/> by <c>href</c> or <c>nameKey</c>.
            </summary>
            <param name="hrefOrNameKey">The AccountStore href or Organization nameKey.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Auth.UsernamePasswordRequest">
            <summary>
            Represents a username (or email) and password pair.
            </summary>
            <seealso cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>
        </member>
        <member name="T:Stormpath.SDK.Impl.Cache.ICacheResolver">
            <summary>
            Resolves resource types to cache regions.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Cache.ICacheResolver.IsSynchronousSupported">
            <summary>
            Gets a value indicating whether a synchronous cache path is supported.
            </summary>
            <value><see langword="true"/> if a synchronous cache path is supported; <see langword="false"/> otherwise.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Cache.ICacheResolver.IsAsynchronousSupported">
            <summary>
            Gets a value indicating whether an asynchronous cache path is supported.
            </summary>
            <value><see langword="true"/> if an asynchronous cache path is supported; <see langword="false"/> otherwise.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Cache.ICacheResolver.GetSyncCache(System.Type)">
            <summary>
            Gets the synchronous cache region used to store <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type.</param>
            <returns>The <see cref="T:Stormpath.SDK.Cache.ISynchronousCache"/> used to store the resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Cache.ICacheResolver.GetAsyncCache(System.Type)">
            <summary>
            Gets the asynchronous cache region used to store <paramref name="resourceType"/>.
            </summary>
            <param name="resourceType">The resource type.</param>
            <returns>The <see cref="T:Stormpath.SDK.Cache.IAsynchronousCache"/> used to store the resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Client.DefaultClient.#ctor(Stormpath.Configuration.Abstractions.Immutable.StormpathConfiguration,Stormpath.SDK.Http.IHttpClient,Stormpath.SDK.Serialization.IJsonSerializer,Stormpath.SDK.Cache.ICacheProvider,Stormpath.SDK.Impl.Client.IUserAgentBuilder,System.String,Stormpath.SDK.Logging.ILogger,System.TimeSpan)">
            <summary>
            Create a base (non-scoped) client.
            </summary>
            <param name="configuration">The configuration model.</param>
            <param name="httpClient">The HTTP client.</param>
            <param name="serializer">The JSON serializer.</param>
            <param name="cacheProvider">The cache provider.</param>
            <param name="userAgentBuilder">The user agent builder.</param>
            <param name="instanceIdentifier">A string that uniquely identifies this client instance for logging.</param>
            <param name="logger">The logger.</param>
            <param name="identityMapExpiration">The internal identity map expiration time.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Client.DefaultClient.#ctor(Stormpath.SDK.Client.IClient,Stormpath.SDK.Impl.Client.IUserAgentBuilder,System.String)">
            <summary>
            Create a scoped client by cloning an existing client.
            </summary>
            <param name="existing">The existing client to clone.</param>
            <param name="userAgentBuilder">The scoped user agent builder.</param>
            <param name="instanceIdentifier">The scoping identifier.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Client.IClientSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Client.IClient">Client</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Client.IClientSync.GetCurrentTenant">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Client.IClient.GetCurrentTenantAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The current Tenant.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Client.IUserAgentBuilder">
            <summary>
            Represents an object that can generate a User-Agent header based on the current environment.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Client.IUserAgentBuilder.GetUserAgent">
            <summary>
            Gets the User-Agent header for the current environment.
            </summary>
            <returns>A User-Agent string.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.CustomData.ICustomDataSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.CustomData.ICustomData">Custom Data</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.DefaultDataStore.#ctor(Stormpath.SDK.Impl.DataStore.IInternalDataStore,Stormpath.SDK.Impl.Client.IUserAgentBuilder,System.String)">
            <summary>
            Create a scoped data store by cloning an existing data store.
            </summary>
            <param name="existing">The existing data store to clone.</param>
            <param name="userAgentBuilder">The scoped user agent builder.</param>
            <param name="instanceIdentifier">The scoping identifier.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IDataStoreSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.DataStore.IDataStore"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.DataStore.IDataStore.GetResourceAsync``1(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> value.</typeparam>
            <param name="href">The resource URL of the resource to retrieve.</param>
            <returns>The Resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{``0}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.DataStore.IDataStore.GetResourceAsync``1(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{``0}},System.Threading.CancellationToken)"/>.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> value.</typeparam>
            <param name="href">The resource URL of the resource to retrieve.</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>The Resource.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore">
            <summary>
            Represents the asynchronous actions a data store can perform.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.GetCollectionAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a collection resource.
            </summary>
            <typeparam name="T">The inner resource type.</typeparam>
            <param name="href">The collection URL.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:Stormpath.SDK.Impl.Resource.CollectionResponsePage`1"/> containing a single page of results.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.GetResourceAsync``1(System.String,System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Type},System.Threading.CancellationToken)">
            <summary>
            Gets a resource, and apply a specified type lookup to the returned object.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="href">The resource URL.</param>
            <param name="typeLookup">The type lookup</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.GetResourceSkipCacheAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Directly retrieves the resource at the specified <paramref name="href"/> URL and returns the resource
            as an instance of the specified class <typeparamref name="T"/>. The cache is not consulted for reads;
            but any returned value <b>is</b> cached.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> value.</typeparam>
            <param name="href">The resource URL of the resource to retrieve.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An instance of the specified class based on data returned from the specified <paramref name="href"/> URL.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.CreateAsync``1(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource on the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.CreateAsync``1(System.String,``0,Stormpath.SDK.Resource.ICreationOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource on the server with the specified options.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="options">The creation options to use for the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.CreateAsync``2(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource on the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <typeparam name="TReturned">The resource type to return.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.CreateAsync``2(System.String,``0,Stormpath.SDK.Http.HttpHeaders,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource on the server with the specified request headers.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <typeparam name="TReturned">The resource type to return.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="headers">The HTTP headers to use for the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.CreateAsync``2(System.String,``0,Stormpath.SDK.Resource.ICreationOptions,Stormpath.SDK.Http.HttpHeaders,System.Threading.CancellationToken)">
            <summary>
            Creates a new resource on the server with the specified options.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <typeparam name="TReturned">The resource type to return.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="options">The creation options to use for the request.</param>
            <param name="headers">The HTTP headers to use for the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.SaveAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Saves local resource changes to the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="resource">The resource to persist.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.SaveAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            Saves local resource changes to the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="resource">The resource to persist.</param>
            <param name="queryString">The additional query string arguments to use in the request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The updated resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.DeleteAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
            Deletes a resource from the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="resource">The resource to delete.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns><see langword="true"/> if the delete operation succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalAsyncDataStore.DeletePropertyAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a single resource property.
            </summary>
            <param name="parentHref">The parent resource URL.</param>
            <param name="propertyName">The name of the property to delete</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns><see langword="true"/> if the delete operation succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IInternalDataStore">
            <summary>
            Represents the internal properties of a <see cref="T:Stormpath.SDK.DataStore.IDataStore"/>.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IInternalDataStore.RequestExecutor">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Impl.Http.IRequestExecutor"/> used by this data store.
            </summary>
            <value>The <see cref="T:Stormpath.SDK.Impl.Http.IRequestExecutor"/> used by this data store.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IInternalDataStore.CacheResolver">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Impl.Cache.ICacheResolver"/> used by this data store.
            </summary>
            <value>The <see cref="T:Stormpath.SDK.Impl.Cache.ICacheResolver"/> used by this data store.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IInternalDataStore.Serializer">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Serialization.IJsonSerializer"/> used by this data store.
            </summary>
            <value>The <see cref="T:Stormpath.SDK.Serialization.IJsonSerializer"/> used by this data store.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IInternalDataStore.Client">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> that owns this data store.
            </summary>
            <value>The <see cref="T:Stormpath.SDK.Client.IClient">Client</see> that owns this data store.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IInternalDataStore.BaseUrl">
            <summary>
            Gets the base URL of the remote server.
            </summary>
            <value>The base URL of the remote server.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IInternalDataStore.ApiKey">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Api.IClientApiKey">Client API Key</see> used by this data store.
            </summary>
            <value>The <see cref="T:Stormpath.SDK.Api.IClientApiKey">Client API Key</see> used by this data store.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalDataStore.InstantiateWithHref``1(System.String)">
            <summary>
            Instantiates and returns a new instance of the specified <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type,
            with the given <paramref name="href"/>
            The instance is merely instantiated and is not saved/synchronized with the server in any way.
            </summary>
            <typeparam name="T">The <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type to instantiate.</typeparam>
            <param name="href">The <c>href</c> of the resource.</param>
            <returns>A new instance of the specified resource type</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalDataStore.InstantiateWithData``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Instantiates and returns a new instance of the specified <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type,
            with the given <paramref name="properties"/>.
            The instance is merely instantiated and is not saved/synchronized with the server in any way.
            </summary>
            <typeparam name="T">The <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type to instantiate.</typeparam>
            <param name="properties">The properties to initialize the object with.</param>
            <returns>A new instance of the specified resource type</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore">
            <summary>
            Represents the synchronous actions a data store can perform.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.GetCollection``1(System.String)">
            <summary>
            Gets a collection resource.
            </summary>
            <typeparam name="T">The inner resource type.</typeparam>
            <param name="href">The collection URL.</param>
            <returns>A <see cref="T:Stormpath.SDK.Impl.Resource.CollectionResponsePage`1"/> containing a single page of results.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.GetResource``1(System.String,System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Type})">
            <summary>
            Gets a resource, and apply a specified type lookup to the returned object.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="href">The resource URL.</param>
            <param name="typeLookup">The type lookup</param>
            <returns>The resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.GetResourceSkipCache``1(System.String)">
            <summary>
            Directly retrieves the resource at the specified <paramref name="href"/> URL and returns the resource
            as an instance of the specified class <typeparamref name="T"/>. The cache is not consulted for reads;
            but any returned value <b>is</b> cached.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> value.</typeparam>
            <param name="href">The resource URL of the resource to retrieve.</param>
            <returns>An instance of the specified class based on data returned from the specified <paramref name="href"/> URL.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Create``1(System.String,``0)">
            <summary>
            Creates a new resource on the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Create``1(System.String,``0,Stormpath.SDK.Resource.ICreationOptions)">
            <summary>
            Creates a new resource on the server with the specified options.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="options">The creation options to use for the request.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Create``2(System.String,``0)">
            <summary>
            Creates a new resource on the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <typeparam name="TReturned">The resource type to return.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Create``2(System.String,``0,Stormpath.SDK.Http.HttpHeaders)">
            <summary>
            Creates a new resource on the server with the specified options.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <typeparam name="TReturned">The resource type to return.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="headers">The HTTP headers to use for the request.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Create``2(System.String,``0,Stormpath.SDK.Resource.ICreationOptions,Stormpath.SDK.Http.HttpHeaders)">
            <summary>
            Creates a new resource on the server with the specified options.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <typeparam name="TReturned">The resource type to return.</typeparam>
            <param name="parentHref">The parent resource URL to send the creation request to.</param>
            <param name="resource">The resource to persist.</param>
            <param name="options">The creation options to use for the request.</param>
            <param name="headers">The HTTP headers to use for the request.</param>
            <returns>The persisted resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Save``1(``0)">
            <summary>
            Saves local resource changes to the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="resource">The resource to persist.</param>
            <returns>The updated resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Save``1(``0,System.String)">
            <summary>
            Saves local resource changes to the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="resource">The resource to persist.</param>
            <param name="queryString">The additional query string arguments to use in the request.</param>
            <returns>The updated resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.Delete``1(``0)">
            <summary>
            Deletes a resource from the server.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="resource">The resource to delete.</param>
            <returns><see langword="true"/> if the delete operation succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IInternalSyncDataStore.DeleteProperty(System.String,System.String)">
            <summary>
            Deletes a single resource property.
            </summary>
            <param name="parentHref">The parent resource URL.</param>
            <param name="propertyName">The name of the property to delete</param>
            <returns><see langword="true"/> if the delete operation succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IResourceConverter">
            <summary>
            Converts resources into <see cref="T:System.Collections.Generic.IDictionary`2"/> instances.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IResourceConverter.ToMap(Stormpath.SDK.Impl.Resource.AbstractResource)">
            <summary>
            Converts an <see cref="T:Stormpath.SDK.Impl.Resource.AbstractResource"/> instance into a <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="resource">The resource.</param>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> of key-value pairs.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IResourceConverter.ToMap(System.Object)">
            <summary>
            Converts any POCO into a <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="resource">The object.</param>
            <returns>A <see cref="T:System.Collections.Generic.IDictionary`2"/> of key-value pairs.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IResourceDataRequest">
            <summary>
            Represents an API request for a Stormpath resource.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataRequest.Action">
            <summary>
            Gets the request's HTTP action.
            </summary>
            <value>The HTTP action.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataRequest.Uri">
            <summary>
            Gets the request URL.
            </summary>
            <value>The request URL.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataRequest.Headers">
            <summary>
            Gets the request's HTTP headers.
            </summary>
            <value>The HTTP headers.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataRequest.Type">
            <summary>
            Gets the resource type as a .NET <see cref="T:System.Type"/>.
            </summary>
            <value>The resource type.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataRequest.Properties">
            <summary>
            Gets additional resource properties used in the request.
            </summary>
            <value>Additional resource properties.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataRequest.SkipCache">
            <summary>
            Gets a value indicating whether to skip the cache for this request.
            </summary>
            <value><see langword="true"/> if the cache should be skipped on this request; <see langword="false"/> otherwise. Default: <see langword="false"/>.</value>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IResourceDataResult">
            <summary>
            Represents the result of an API request for a Stormpath resource.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataResult.Action">
            <summary>
            Gets the resulting HTTP action.
            </summary>
            <value>The HTTP action.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataResult.Uri">
            <summary>
            Gets the request URL.
            </summary>
            <value>The request URL.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataResult.Type">
            <summary>
            Gets the resource type as a .NET <see cref="T:System.Type"/>.
            </summary>
            <value>The resource type.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataResult.HttpStatus">
            <summary>
            Gets the response HTTP status code.
            </summary>
            <value>The response HTTP status code.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.IResourceDataResult.Body">
            <summary>
            Gets the body of the response.
            </summary>
            <value>The response body.</value>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.IResourceFactory">
            <summary>
            Creates local resource instances from <see cref="T:System.Collections.Generic.IDictionary`2">Maps</see> of properties.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IResourceFactory.Create``1(Stormpath.SDK.Impl.Resource.ILinkable)">
            <summary>
            Creates an empty resource of the specified type,
            and links it to a previous instance of the resource.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="original">A previously-instantiated version of the resource to link to.</param>
            <returns>The new resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IResourceFactory.Create(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},Stormpath.SDK.Impl.Resource.ILinkable)">
            <summary>
            Creates a resource of the specified type with the specified <paramref name="properties"/>,
            and links it to a previous instance of the resource.
            </summary>
            <param name="targetType">The resource type.</param>
            <param name="properties">The resource properties.</param>
            <param name="original">A previously-instantiated version of the resource to link to.</param>
            <returns>The new resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.IResourceFactory.Create``1(System.Collections.Generic.IDictionary{System.String,System.Object},Stormpath.SDK.Impl.Resource.ILinkable)">
            <summary>
            Creates a resource of the specified type with the specified <paramref name="properties"/>,
            and links it to a previous instance of the resource.
            </summary>
            <typeparam name="T">The resource type.</typeparam>
            <param name="properties">The resource properties.</param>
            <param name="original">A previously-instantiated version of the resource to link to.</param>
            <returns>The new resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.IsInterface(System.Type)">
            <summary>
            Checks whether this type is a known resource interface (e.g. <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>).
            </summary>
            <param name="possiblyInterface">The type to check</param>
            <returns><see langword="true"/> if this type is a known resource interface; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.IsConcrete(System.Type)">
            <summary>
            Checks whether this type is a known concrete instance class (e.g., <see cref="T:Stormpath.SDK.Impl.Account.DefaultAccount"/>).
            </summary>
            <param name="possiblyConcrete">The type to check.</param>
            <returns><see langword="true"/> if this type is a known concrete type; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.IsCollectionResponse(System.Type)">
            <summary>
            Checks whether this type represents a paged collection response.
            </summary>
            <param name="type">The type to check</param>
            <returns><see langword="true"/> if this type represents a paged collection response; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.GetInterface``1">
            <summary>
            Looks up an interface from a concrete type.
            </summary>
            <typeparam name="T">A concrete instance class type (e.g., <see cref="T:Stormpath.SDK.Impl.Account.DefaultAccount"/>).</typeparam>
            <returns>The associated interface type (e.g., <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>).</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.GetInterface(System.Type)">
            <summary>
            Looks up an interface from a concrete type.
            </summary>
            <param name="possiblyConcrete">A concrete instance class type (e.g., <see cref="T:Stormpath.SDK.Impl.Account.DefaultAccount"/>).</param>
            <returns>The associated interface type (e.g., <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>).</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.GetInterfaceByPropertyName(System.String)">
            <summary>
            Gets a resource interface type given a resource attribute name.
            </summary>
            <param name="nestedItemKey">A resource attribute name (e.g. "directory").</param>
            <returns>The associated interface type (e.g., <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>, or <see langword="null"/> if no type could be found.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.GetConcrete``1">
            <summary>
            Looks up concrete type from an interface.
            </summary>
            <typeparam name="T">A resource interface (e.g., <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>).</typeparam>.
            <returns>The associated concrete instance class type (e.g., <see cref="T:Stormpath.SDK.Impl.Account.DefaultAccount"/>).</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.GetConcrete(System.Type)">
            <summary>
            Looks up concrete type from an interface.
            </summary>
            <param name="possiblyInterface">A resource interface (e.g., <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>).</param>
            <returns>The associated concrete instance class type (e.g., <see cref="T:Stormpath.SDK.Impl.Account.DefaultAccount"/>).</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.ResourceTypeLookup.GetInnerCollectionInterface(System.Type)">
            <summary>
            Looks up the inner interface from a parent type.
            </summary>
            <param name="collectionType">A <see cref="T:Stormpath.SDK.Impl.Resource.CollectionResponsePage`1"/> containing some inner <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> interface (e.g. <see cref="T:Stormpath.SDK.Impl.Resource.CollectionResponsePage`1"/>).</param>
            <returns>The inner interface (e.g. <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>).</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.Filters.AccountStoreMappingCacheInvalidationFilter">
            <summary>
            When IAccountStoreMapping objects are created or updated, this filter will refresh
            the cache and identity map by retrieving all of the account store mappings for the related application.
            This filter does not mutate the request or result.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.Filters.IAsynchronousFilter">
            <summary>
            Represents a filter that can be used to intercept asynchronous resource requests.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.Filters.IAsynchronousFilter.FilterAsync(Stormpath.SDK.Impl.DataStore.IResourceDataRequest,Stormpath.SDK.Impl.DataStore.Filters.IAsynchronousFilterChain,Stormpath.SDK.Logging.ILogger,System.Threading.CancellationToken)">
            <summary>
            Execute this filter for a request, and any subsequent chained filters.
            </summary>
            <param name="request">The request.</param>
            <param name="chain">The remaining filters in the chain.</param>
            <param name="logger">The logger.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of the resource request (and any upstream filters).</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.Filters.IAsynchronousFilterChain">
            <summary>
            Represents an ordered chain of filters to execute for an asynchronous request.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.Filters.IAsynchronousFilterChain.DataStore">
            <summary>
            Gets the data store invoking this filter chain.
            </summary>
            <value>The data store.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.Filters.IAsynchronousFilterChain.FilterAsync(Stormpath.SDK.Impl.DataStore.IResourceDataRequest,Stormpath.SDK.Logging.ILogger,System.Threading.CancellationToken)">
            <summary>
            Executes each filter in the chain for an asynchronous request.
            </summary>
            <param name="request">The request.</param>
            <param name="logger">The logger.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The result of the filtered request.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.Filters.ISynchronousFilter">
            <summary>
            Represents a filter that can be used to intercept synchronous resource requests.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.Filters.ISynchronousFilter.Filter(Stormpath.SDK.Impl.DataStore.IResourceDataRequest,Stormpath.SDK.Impl.DataStore.Filters.ISynchronousFilterChain,Stormpath.SDK.Logging.ILogger)">
            <summary>
            Execute this filter for a request, and any subsequent chained filters.
            </summary>
            <param name="request">The request.</param>
            <param name="chain">The remaining filters in the chain.</param>
            <param name="logger">The logger.</param>
            <returns>The result of the resource request (and any upstream filters).</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.DataStore.Filters.ISynchronousFilterChain">
            <summary>
            Represents an ordered chain of filters to execute for a synchronous request.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.DataStore.Filters.ISynchronousFilterChain.DataStore">
            <summary>
            Gets the data store invoking this filter chain.
            </summary>
            <value>The data store.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.DataStore.Filters.ISynchronousFilterChain.Filter(Stormpath.SDK.Impl.DataStore.IResourceDataRequest,Stormpath.SDK.Logging.ILogger)">
            <summary>
            Executes each filter in the chain for a synchronous request.
            </summary>
            <param name="request">The request.</param>
            <param name="logger">The logger.</param>
            <returns>The result of the filtered request.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Directory.IAccountCreationPolicySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on an <see cref="T:Stormpath.SDK.Directory.IAccountCreationPolicy">Account Creation Policy</see>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Directory.IDirectorySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Directory.IDirectorySync.GetProvider">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Directory.IDirectory.GetProviderAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Provider for this Directory.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Directory.IDirectorySync.GetAccountCreationPolicy">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Directory.IDirectory.GetAccountCreationPolicyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Account Creation Policy for this Directory.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Directory.IDirectorySync.GetPasswordPolicy">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Directory.IDirectory.GetPasswordPolicyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Password Policy for this Directory.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Directory.IPasswordPolicySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on an <see cref="T:Stormpath.SDK.Directory.IPasswordPolicy">Password Policy</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Directory.IPasswordPolicySync.GetPasswordStrengthPolicy">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Directory.IPasswordPolicy.GetPasswordStrengthPolicyAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Password Strength Policy for this Directory.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Directory.IPasswordStrengthPolicySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on an <see cref="T:Stormpath.SDK.Directory.IPasswordStrengthPolicy">Password Strength Policy</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Extensions.ConcurrentDictionaryExtensions.TryRemove``2(System.Collections.Concurrent.ConcurrentDictionary{``0,``1},``0,``1)">
            <summary>
            Atomic conditional removal from a <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/>.
            Only removes <paramref name="key"/> if its value matches <paramref name="value"/>.
            </summary>
            <remarks>
            Based on code by <see href="http://blogs.msdn.com/b/pfxteam/archive/2011/04/02/10149222.aspx">Stephen Toub</see>.
            </remarks>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
            <param name="dictionary">The source dictionary.</param>
            <param name="key">The key to attempt to remove.</param>
            <param name="value">The value to conditionally match.</param>
            <returns><see langword="true"/> if <paramref name="key"/> was removed from the dictionary.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Extensions.HttpExtensions.IsClientError(Stormpath.SDK.Http.IHttpResponse)">
            <summary>
            Determines whether an HTTP response resulted in a client-side (HTTP 4xx) error.
            </summary>
            <param name="response">The HTTP response to check.</param>
            <returns><see langword="true"/> if the response represents a client-side (HTTP 4xx) error; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Extensions.HttpExtensions.IsServerError(Stormpath.SDK.Http.IHttpResponse)">
            <summary>
            Determines whether an HTTP response resulted in a server-side (HTTP 5xx) error.
            </summary>
            <param name="response">The HTTP response to check.</param>
            <returns><see langword="true"/> if the response represents a server-side (HTTP 5xx) error; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Group.GroupCreationActionsShared">
            <summary>
            Both <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> and <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> implement
            <see cref="T:Stormpath.SDK.Group.IGroupCreationActions"/>, so this shared class wraps the methods up in a DRY way.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Group.IGroupMembershipSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupMembershipSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroupMembership.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupMembershipSync.GetGroup">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroupMembership.GetGroupAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Group.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Group.IGroupSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupSync.AddAccount(Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroup.AddAccountAsync(Stormpath.SDK.Account.IAccount,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="account">The account to assign to this group.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created reflecting the group-to-account association.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupSync.AddAccount(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroup.AddAccountAsync(Stormpath.SDK.Account.IAccount,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="hrefOrEmailOrUsername">The <c>href</c>, email, or username of the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to associate.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created reflecting the group-to-account association.
            </returns>
            <exception cref="T:System.InvalidOperationException">The specified account could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupSync.RemoveAccount(Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroup.RemoveAccountAsync(Stormpath.SDK.Account.IAccount,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="account">The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> object to disassociate.</param>
            <returns>Whether the operation succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">The specified account does not belong to this group.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupSync.RemoveAccount(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroup.RemoveAccountAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="hrefOrEmailOrUsername">The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> object to disassociate.</param>
            <returns>Whether the operation succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">The specified account does not belong to this group.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Group.IGroupSync.GetDirectory">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Group.IGroup.GetDirectoryAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Directory.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Group.IInternalGroupMembership">
            <summary>
            Represents an abstract group membership object with a raw Account and Group href.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Group.IInternalGroupMembership.AccountHref">
            <summary>
            Gets the Account href.
            </summary>
            <value>The Account href.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Group.IInternalGroupMembership.GroupHref">
            <summary>
            Gets the Group href.
            </summary>
            <value>The Group href.</value>
        </member>
        <member name="T:Stormpath.SDK.Impl.Http.IRequestExecutor">
            <summary>
            Coordinates the low-level execution of API requests.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Http.IRequestExecutor.ApiKey">
            <summary>
            Gets the API Key used to sign requests.
            </summary>
            <value>The API Key used to sign requests.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Http.IRequestExecutor.ExecuteAsync(Stormpath.SDK.Http.IHttpRequest,System.Threading.CancellationToken)">
            <summary>
            Executes a request asynchronously.
            </summary>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The HTTP response.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Http.IRequestExecutor.Execute(Stormpath.SDK.Http.IHttpRequest)">
            <summary>
            Executes a request synchronously.
            </summary>
            <param name="request">The request.</param>
            <returns>The HTTP response.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticator">
            <summary>
            Represents an abstract authenticator that can authenticate a request.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticator.Authenticate(Stormpath.SDK.Http.IHttpRequest,Stormpath.SDK.Api.IClientApiKey)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="request">The request.</param>
            <param name="apiKey">The client API Key.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticatorFactory">
            <summary>
            Represents a factory that can create the appropriate <see cref="T:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticator"/>
            given an <see cref="T:Stormpath.SDK.Client.AuthenticationScheme">Authentication Scheme</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticatorFactory.Create(Stormpath.SDK.Client.AuthenticationScheme)">
            <summary>
            Creates the appropriate <see cref="T:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticator" /> for this <see cref="T:Stormpath.SDK.Client.AuthenticationScheme">Authentication Scheme</see>.
            </summary>
            <param name="scheme">The authentication scheme.</param>
            <returns>A new <see cref="T:Stormpath.SDK.Impl.Http.Authentication.IRequestAuthenticator"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Http.Support.IBackoffStrategy">
            <summary>
            Represents a progressive retry backoff algorithm.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Http.Support.IBackoffStrategy.GetDelayMilliseconds(System.Int32)">
            <summary>
            Gets the number of milliseconds to wait for the specified <paramref name="retryCount"/>.
            </summary>
            <param name="retryCount">The number of retries.</param>
            <returns>The number of milliseconds to wait.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.IdentityMap.IIdentityMap`1">
            <summary>
            Represents a mapping between keys and object references.
            </summary>
            <typeparam name="TItem">The type of stored objects.</typeparam>
        </member>
        <member name="P:Stormpath.SDK.Impl.IdentityMap.IIdentityMap`1.LifetimeItemsAdded">
            <summary>
            Gets the number of items added in the entire lifetime of the identity map.
            </summary>
            <value>The total number of items added.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.IdentityMap.IIdentityMap`1.GetOrAdd(System.String,System.Func{`0},System.Boolean)">
            <summary>
            Gets or adds an object reference to the identity map. If an item with the specified <paramref name="key"/>
            already exists, it is returned immediately. If no item is found, a new item is created from <paramref name="itemFactory"/>
            and stored.
            </summary>
            <param name="key">The key.</param>
            <param name="itemFactory">A delegate that creates a new item.</param>
            <param name="storeInfinitely">Determines whether this item has an infinite expiration.</param>
            <returns>The existing item, or the result of <paramref name="itemFactory"/> if no item was found..</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.IdSite.DefaultIdSiteUrlBuilder.GetBaseUrl(System.String)">
            <summary>
            Trim off anything after the first single slash in a URL.
            </summary>
            <remarks>
            For example, http://foo.com/test becomes http://foo.com
            </remarks>
            <param name="href">The URL to trim.</param>
            <returns><paramref name="href"/> up to the first single slash.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.IdSite.IAccountResultSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.IdSite.IAccountResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.IdSite.IAccountResultSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.IdSite.IAccountResult.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Account.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.IdSite.IIdSiteJtiProvider">
            <summary>
            Represents a JWT ID (jti) provider used for ID Site.
            </summary>
            <remarks>
            This is abstracted so it can be injectable during testing.
            </remarks>
        </member>
        <member name="M:Stormpath.SDK.Impl.IdSite.IIdSiteJtiProvider.NewJti">
            <summary>
            Generates a new JWT ID (jti) string.
            </summary>
            <returns>A JWT ID string.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Jwt.JwtLifetimeValidator.Validate(Stormpath.SDK.Jwt.IJwtClaims)">
            <summary>
            Ensures that the token is not premature and has not expired.
            </summary>
            <param name="claims">The JWT claims.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Jwt.JwtLifetimeValidator.ValidateExpiration(Stormpath.SDK.Jwt.IJwtClaims)">
            <summary>
            Ensures the token is not accepted on or after any specified <c>exp</c> time.
            </summary>
            <see href="https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-30#section-4.1.4"/>
            <param name="claims">The JWT claims.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Jwt.JwtLifetimeValidator.ValidateNotBefore(Stormpath.SDK.Jwt.IJwtClaims)">
            <summary>
            Ensures the token is not accepted before any specified <c>nbf</c> time.
            </summary>
            <see href="https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-30#section-4.1.5"/>
            <param name="claims">The JWT claims.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Jwt.JwtSignatureValidator">
            <summary>
            Validates a JWT signature.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1">
            <summary>
            A query executor for <see cref="T:Stormpath.SDK.Linq.IAsyncQueryable`1"/>.
            </summary>
            <typeparam name="TResult">The result type.</typeparam>
        </member>
        <member name="P:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.CurrentHref">
            <summary>
            Gets the current request URL.
            </summary>
            <value>The current request URL.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.CompiledModel">
            <summary>
            Gets the compiled query model.
            </summary>
            <value>The compiled query model.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.Offset">
            <summary>
            Gets the current paging offset.
            </summary>
            <value>The current paging offset.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.Limit">
            <summary>
            Gets the current paging limit.
            </summary>
            <value>The current paging limit.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.Size">
            <summary>
            Gets the current paging size.
            </summary>
            <value>The current paging size.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.CurrentPage">
            <summary>
            Gets the current page of results.
            </summary>
            <value>The current page of results.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.MoveNextAsync(System.Threading.CancellationToken)">
            <summary>
            Attempts to move to the next page of collection results.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns><see langword="true"/> if the operation succeeded and the current values have been updated;
            <see langword="false"/> if the iterator has been exhausted.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Linq.Executor.IAsyncExecutor`1.MoveNext">
            <summary>
            Synchronously attempts to move to the next page of collection results.
            </summary>
            <returns><see langword="true"/> if the operation succeeded and the current values have been updated;
            <see langword="false"/> if the iterator has been exhausted.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Linq.Parsing.NodeReducer.Reduce(System.Linq.Expressions.Expression)">
            <summary>
            Removes any Convert() calls wrapping a node.
            </summary>
            <remarks>VB.NET has a tendency to add tons of Convert() calls everywhere.</remarks>
            <param name="node">The node.</param>
            <returns>The unwrapped node.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Linq.Parsing.WhereExpressionVisitor.GetBinaryAsConstantAnd``1(System.Linq.Expressions.BinaryExpression)">
            <summary>
            This method will get the operands of a binary expression (a Constant and another expression type)
            regardless of order (expr == constant and constant == expr are both valid).
            </summary>
            <typeparam name="TOther">The other expression type.</typeparam>
            <param name="binaryNode">The binary node.</param>
            <returns>The constant expression and other expression.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Linq.Parsing.Transformers.IExpressionTransformer">
            <summary>
            Represents a transformer that operates on an <see cref="T:System.Linq.Expressions.Expression"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Linq.Parsing.Transformers.IExpressionTransformer.Transform(System.Linq.Expressions.Expression)">
            <summary>
            Transformers the given expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The updated expression.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Linq.Parsing.Transformers.PartialEvaluationTransformer">
            <summary>
            Performs evaluation and replacement of independent sub-trees.
            Returns a new tree with sub-trees evaluated and replaced.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Linq.Parsing.Transformers.PartialEvaluationTransformer.SubtreeEvaluator">
            <summary>
            Evaluates and replaces sub-trees when first candidate is reached (top-down)
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Linq.Parsing.Transformers.PartialEvaluationTransformer.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IAccessTokenSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IAccessToken"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IAccessTokenSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IAccessToken.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IAccessTokenSync.GetAccount(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IAccessToken.GetAccountAsync(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IAccessTokenSync.GetApplication">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IAccessToken.GetApplicationAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IAccessTokenSync.GetApplication(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IAccessToken.GetApplicationAsync(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IGrantAuthenticationToken">
            <summary>
            Represents the result of a Grant Authentication operation.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IIdSiteTokenAuthenticationAttempt">
            <summary>
            Represents the information required to build an ID Site Token Authentication request.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Oauth.IIdSiteTokenAuthenticationAttempt.Token">
            <summary>
            Gets the token that will be used for the exchange request.
            </summary>
            <value>The token that will be used for the exchange request.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IIdSiteTokenAuthenticationAttempt.SetToken(System.String)">
            <summary>
            Sets the token that will be used for the exchange request.
            </summary>
            <param name="token">The string representation of the token.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IIdSiteTokenAuthenticatorSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IIdSiteTokenAuthenticator"/>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IJwtAuthenticatorSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IJwtAuthenticator"/>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IOauthAuthenticatorSync`2">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IOauthAuthenticator`2"/>.
            </summary>
            <typeparam name="TRequest">The request kind that the authenticator will accept.</typeparam>
            <typeparam name="TResult">The response kind that the authenticator will return.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IOauthAuthenticatorSync`2.Authenticate(`0)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IOauthAuthenticator`2.AuthenticateAsync(`0,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="authenticationRequest">The Authentication Request this authenticator will attempt.</param>
            <returns>An Authentication Result representing the successful authentication.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication failed.</exception>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IOauthGrantAuthenticationResultSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IOauthGrantAuthenticationResultSync.GetAccessToken">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult.GetAccessTokenAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IOauthPolicySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IOauthPolicySync.GetApplication">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IOauthPolicy.GetApplicationAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy">OauthPolicy</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt">
            <summary>
            Represents the information required to build a Password Grant Authentication request.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.AccountStoreHref">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> <c>href</c> that will used for the token exchange request.
            </summary>
            <value>The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> <c>href</c> that will used for the token exchange request.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.OrganizationNameKey">
            <summary>
            Gets the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> <c>nameKey</c> that will used for the token exchange request.
            </summary>
            <value>The <c>nameKey</c> that will used for the token exchange request.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.Login">
            <summary>
            Gets the username to be used in the token exchange request.
            </summary>
            <value>The username to be used in the token exchange request.</value>
        </member>
        <member name="P:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.Password">
            <summary>
            Gets the password to be used in the token exchange request.
            </summary>
            <value>The password to be used in the token exchange request.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.SetAccountStore(Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Sets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> that will be used for the token exchange request.
            </summary>
            <param name="accountStore">The Account Store.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.SetOrganizationNameKey(System.String)">
            <summary>
            Sets the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> <c>nameKey</c> that will be used for the token exchange request.
            </summary>
            <param name="nameKey">The <c>nameKey</c>.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.SetAccountStore(System.String)">
            <summary>
            Sets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> <c>href</c> that will be used for the token exchange request.
            </summary>
            <param name="accountStoreHref">The Account Store <c>href</c>.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.SetLogin(System.String)">
            <summary>
            Sets the username to be used in the token exchange request.
            </summary>
            <param name="login">The username.</param>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticationAttempt.SetPassword(System.String)">
            <summary>
            Sets the password to be used in the token exchange request.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IPasswordGrantAuthenticatorSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IPasswordGrantAuthenticator"/>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IRefreshGrantAuthenticationAttempt">
            <summary>
            Represents the information required to build a Refresh Grant Authentication request.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Oauth.IRefreshGrantAuthenticationAttempt.RefreshToken">
            <summary>
            Gets the Refresh Token that will be used for the token exchange request.
            </summary>
            <value>The Refresh Token that will be used for the token exchange request.</value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IRefreshGrantAuthenticationAttempt.SetRefreshToken(System.String)">
            <summary>
            Sets the Refresh Token that will be used for the token exchange request.
            </summary>
            <param name="refreshToken">The string representation of the Refresh Token.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IRefreshGrantAuthenticatorSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IRefreshGrantAuthenticator"/>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Oauth.IRefreshTokenSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Oauth.IRefreshToken"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IRefreshTokenSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IRefreshToken.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IRefreshTokenSync.GetAccount(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IRefreshToken.GetAccountAsync(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IRefreshTokenSync.GetApplication">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IRefreshToken.GetApplicationAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Oauth.IRefreshTokenSync.GetApplication(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Oauth.IRefreshToken.GetApplicationAsync(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Organization.IOrganizationAccountStoreMappingSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Organization.IOrganizationAccountStoreMapping"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Organization.IOrganizationAccountStoreMappingSync.GetOrganization">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Organization.IOrganizationAccountStoreMapping.GetOrganizationAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The mapping's <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Organization.IOrganizationSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Provider.AbstractProvider">
            <summary>
            Base class for Provider-specific <see cref="T:Stormpath.SDK.Provider.IProvider">Provider</see> resources.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Provider.AbstractProviderAccountRequestBuilder`1">
            <summary>
            Base class that each Provider-specific <see cref="T:Stormpath.SDK.Provider.IProviderAccountRequestBuilder`1"/> can extend to facilitate its work.
            </summary>
            <typeparam name="T">The builder type.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.Provider.AbstractProviderAccountRequestBuilder`1.BuildConcrete">
            <summary>
            Delegates responsibility to Provider-specific subclasses when constructing <see cref="T:Stormpath.SDK.Provider.IProviderAccountRequest"/> instances,
            so subclasses can add their own properties.
            </summary>
            <returns>The actual request based on the derived builder's current state.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Provider.DefaultProvider">
            <summary>
            Represents Stormpath as a Provider. For example, the provider of a Stormpath-owned directory is "stormpath".
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Provider.IProviderAccountAccess">
            <summary>
            Represents a request for an Account given a specified Provider.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Provider.IProviderAccountAccess.GetProviderData">
            <summary>
            Gets the Provider-specific <see cref="T:Stormpath.SDK.Provider.IProviderData"/> containing the information required to execute an access attempt.
            </summary>
            <returns>The Provider-specific <see cref="T:Stormpath.SDK.Provider.IProviderData"/> containing the information required to execute an access attempt.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Provider.IProviderAccountAccess.SetProviderData(Stormpath.SDK.Provider.IProviderData)">
            <summary>
            Sets the Provider-specific <see cref="T:Stormpath.SDK.Provider.IProviderData"/> containing the information required to execute an access attempt.
            </summary>
            <param name="providerData">The Provider-specific <see cref="T:Stormpath.SDK.Provider.IProviderData"/>.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Provider.ProviderType">
            <summary>
            Represents provider-specific names and class mappings.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.ExpandedProperty">
            <summary>
            Represents embedded resource data that is returned from a link expansion request.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.IDeletableSync">
            <summary>
            Represents resources that can be deleted synchronously.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Resource.IDeletableSync.Delete">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Resource.IDeletable.DeleteAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>Whether the delete operation succeeded.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.IEmbeddedProperty">
            <summary>
            Represents a property that contains a link to another property.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Resource.IEmbeddedProperty.Href">
            <summary>
            Gets the URL of linked property.
            </summary>
            <value>The URL of the linked property.</value>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.IExtendableSync">
            <summary>
            Represents resources that have CustomData resources that can store arbitrary name/value pairs.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Resource.IExtendableSync.CustomData">
            <summary>
            Gets a proxy that can be used to manipulate the Custom Data for this resource.
            </summary>
            <seealso cref="M:Stormpath.SDK.Impl.Resource.IExtendableSync.GetCustomData"/>
            <value>
            A proxy that can be used to manipulate the Custom Data for this resource.
            </value>
        </member>
        <member name="M:Stormpath.SDK.Impl.Resource.IExtendableSync.GetCustomData">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Resource.IExtendable.GetCustomDataAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.CustomData.ICustomData">Custom Data</see> associated with this resource.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.ILinkable">
            <summary>
            Represents a resource proxy that can be linked to different underlying data.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Resource.ILinkable.Link(Stormpath.SDK.Impl.Resource.ResourceData)">
            <summary>
            Updates the underlying data reference this resource proxy points to.
            </summary>
            <param name="data">The resource data.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.INotifiable">
            <summary>
            Represents an update callback that can be fired.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Resource.INotifiable.OnUpdate(System.Collections.Generic.IDictionary{System.String,System.Object},Stormpath.SDK.Impl.DataStore.IInternalDataStore)">
            <summary>
            Notifies the target object that an update is occurring.
            </summary>
            <param name="properties">The new resource properties.</param>
            <param name="dataStore">The parent data store.</param>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.ISaveableSync`1">
            <summary>
            Represents a resource that can be created or modified.
            </summary>
            <typeparam name="T">The <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.Resource.ISaveableSync`1.Save">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Resource.ISaveable`1.SaveAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The persisted resource data.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Resource.ISaveableWithOptionsSync`1">
            <summary>
            Represents a resource that can be saved with additional options.
            </summary>
            <typeparam name="T">The <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.Resource.ISaveableWithOptionsSync`1.Save(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{`0}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Resource.ISaveableWithOptions`1.SaveAsync(System.Action{Stormpath.SDK.Resource.IRetrievalOptions{`0}},System.Threading.CancellationToken)"/>.
            </summary>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>The persisted resource data.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Saml.ISamlAccountResultSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Saml.ISamlAccountResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Saml.ISamlAccountResultSync.GetAccount">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Saml.ISamlAccountResult.GetAccountAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Account.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Saml.ISamlPolicySync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Saml.ISamlPolicy"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Saml.ISamlPolicySync.GetSamlServiceProvider">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Saml.ISamlPolicy.GetSamlServiceProviderAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Saml.ISamlServiceProvider">SAML Service Provider</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Saml.ISamlServiceProviderSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Impl.Saml.ISamlServiceProviderSync"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Saml.ISamlServiceProviderSync.GetSsoInitiationEndpoint">
            <summary>
            Gets the endpoint resource used to initiate SAML-based Single Sign-On.
            </summary>
            <returns>The endpoint resource used to initiate SAML-based Single Sign-On.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Tenant.IHasTenantSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Tenant.IHasTenant"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.IHasTenantSync.GetTenant">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.IHasTenant.GetTenantAsync(System.Threading.CancellationToken)"/>.
            </summary>
            <returns>The Tenant.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Tenant.ITenantActionsSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateApplication(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Application.ApplicationCreationOptionsBuilder})">
            <summary>
            Synchronous counterpart to <c>SDK.Tenant.ITenantActions.CreateApplicationAsync(IApplication, Action{ApplicationCreationOptionsBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/>,
            which will be used when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateApplication(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Application.IApplicationCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateApplicationAsync(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Application.IApplicationCreationOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <param name="creationOptions">An <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/> instance to use when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateApplication(Stormpath.SDK.Application.IApplication)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateApplicationAsync(Stormpath.SDK.Application.IApplication,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateApplication(System.String,System.Boolean)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateApplicationAsync(System.String,System.Boolean,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="name">The name of the application.</param>
            <param name="createDirectory">Whether a default directory should be created automatically.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateDirectory(Stormpath.SDK.Directory.IDirectory)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateDirectoryAsync(Stormpath.SDK.Directory.IDirectory,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="directory">The Directory resource to create.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateDirectory(Stormpath.SDK.Directory.IDirectory,System.Action{Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder})">
            <summary>
            Synchronous counterpart to <c>SDK.Tenant.ITenantActions.CreateDirectoryAsync(IDirectory, Action{DirectoryCreationOptionsBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="directory">The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/>,
            which will be used when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateDirectory(Stormpath.SDK.Directory.IDirectory,Stormpath.SDK.Directory.IDirectoryCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateDirectoryAsync(Stormpath.SDK.Directory.IDirectory,Stormpath.SDK.Directory.IDirectoryCreationOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="directory">The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to create.</param>
            <param name="creationOptions">A <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> instance to use when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateDirectory(System.String,System.String,Stormpath.SDK.Directory.DirectoryStatus)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateDirectoryAsync(System.String,System.String,Stormpath.SDK.Directory.DirectoryStatus,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="name">The directory name.</param>
            <param name="description">The directory description.</param>
            <param name="status">The initial directory status.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateOrganization(Stormpath.SDK.Organization.IOrganization)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateOrganizationAsync(Stormpath.SDK.Organization.IOrganization,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="organization">The Organization to create.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateOrganization(Stormpath.SDK.Organization.IOrganization,System.Action{Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder})">
            <summary>
            Synchronous counterpart to <c>SDK.Tenant.ITenantActions.CreateOrganizationAsync(IOrganization, Action{OrganizationCreationOptionsBuilder}, System.Threading.CancellationToken)</c>.
            </summary>
            <param name="organization">The Organization to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/>,
            which will be used when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateOrganization(Stormpath.SDK.Organization.IOrganization,Stormpath.SDK.Organization.IOrganizationCreationOptions)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateOrganizationAsync(Stormpath.SDK.Organization.IOrganization,Stormpath.SDK.Organization.IOrganizationCreationOptions,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="organization">The Organization to create.</param>
            <param name="creationOptions">A <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> instance to use when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.CreateOrganization(System.String,System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.CreateOrganizationAsync(System.String,System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="name">The Organization's name.</param>
            <param name="nameKey">The Organization's <c>nameKey</c>.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.VerifyAccountEmail(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.VerifyAccountEmailAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="token">The <c>sptoken</c> query parameter value.</param>
            <returns>The verified account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetAccount(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetAccountAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetAccount(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}})">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetAccountAsync(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}},System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{``0}})"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to retrieve.</param>
            <param name="retrievalOptions">The retrieval options to use.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetApplication(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetApplicationAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetDirectory(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetDirectoryAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetGroup(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetGroupAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetOrganization(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetOrganizationAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetOrganizationByNameKey(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetOrganizationByNameKeyAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method that looks up an <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> by its <c>nameKey</c>.</remarks>
            <param name="nameKey">The <c>nameKey</c> of the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetAccessToken(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetAccessTokenAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Tenant.ITenantActionsSync.GetRefreshToken(System.String)">
            <summary>
            Synchronous counterpart to <see cref="M:Stormpath.SDK.Tenant.ITenantActions.GetRefreshTokenAsync(System.String,System.Threading.CancellationToken)"/>.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Impl.DataStore.IDataStoreSync.GetResource``1(System.String)"/>.</remarks>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">Refresh Token</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">Refresh Token</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="T:Stormpath.SDK.Impl.Tenant.ITenantSync">
            <summary>
            Represents the synchronous actions that correspond to the default asynchronous actions
            available on <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Impl.Tenant.TenantActionsShared">
            <summary>
            Both <see cref="T:Stormpath.SDK.Client.IClient"/> and <see cref="T:Stormpath.SDK.Tenant.ITenant"/> implement
            <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/>, so this shared class wraps the methods up in a DRY way.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.Base64.Decode(System.String,System.Text.Encoding)">
            <summary>
            Decodes strings encoded with either Encode() EncodeUrlSafe().
            </summary>
            <param name="encoded">Base64-encoded value.</param>
            <param name="encoding">The encoding.</param>
            <returns>The decoded string.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Utility.IClock">
            <summary>
            Injectable clock interface for testing.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Impl.Utility.IClock.Now">
            <summary>
            Gets a <see cref="T:System.DateTimeOffset"/> object that is set to the current date and time
            on the current computer, with the offset set to the local time's offset from
            Coordinated Universal Time (UTC).
            </summary>
            <value>
            A System.DateTimeOffset object whose date and time is the current local time
            and whose offset is the local time zone's offset from Coordinated Universal Time (UTC).
            </value>
        </member>
        <member name="T:Stormpath.SDK.Impl.Utility.IFile">
            <summary>
            An abstraction over System.IO.File.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.IFile.ReadAllText(System.String)">
            <summary>
            An abstraction over <see cref="M:System.IO.File.ReadAllText(System.String)"/>.
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Utility.Iso8601Duration">
            <summary>
            Contains methods useful for interacting with ISO 8601 durations.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.Iso8601Duration.TryParse(System.String,System.TimeSpan@)">
            <summary>
            Converts the ISO 8601 string representation of a duration to its equivalent
            .NET <see cref="T:System.TimeSpan"/> representation.
            A return value indicates whether the conversion succeeded or failed.
            </summary>
            <remarks>
            The year (Y) and month (M) designators are currently unsupported. If these
            designators are encountered, the method will return <see langword="false"/>.
            <para>
            These are problematic because of things like leap years, Daylight Savings Time, etc.
            More information is needed in order to convert to a <see cref="T:System.TimeSpan"/>;
            for that, a more powerful library such as NodaTime would be appropriate.
            </para>
            </remarks>
            <param name="duration">The ISO 8601 duration, excluding year (Y) and month (M) designators.
            </param>
            <param name="timeSpan">
            When the method returns, this parameter is set to the resulting <see cref="T:System.TimeSpan"/>
            if the conversion was successful, or <c>default(TimeSpan)</c> if the conversion was unsuccessful.</param>
            <returns><see langword="true"/> if the conversion succeeded; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.Iso8601Duration.Parse(System.String)">
            <summary>
            Converts the ISO 8601 string representation of a duration to its equivalent
            .NET <see cref="T:System.TimeSpan"/> representation.
            </summary>
            <remarks>
            The year (Y) and month (M) designators are currently unsupported. If these
            designators are encountered, the method will return <see langword="false"/>.
            <para>
            These are problematic because of things like leap years, Daylight Savings Time, etc.
            More information is needed in order to convert to a <see cref="T:System.TimeSpan"/>;
            for that, a more powerful library such as NodaTime would be appropriate.
            </para>
            </remarks>
            <param name="duration">The ISO 8601 duration, excluding year (Y) and month (M) designators.</param>
            <returns><see langword="true"/> if the conversion succeeded; <see langword="false"/> otherwise.</returns>
            <exception cref="T:System.FormatException">The ISO 8601 string was not in the proper format.</exception>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.Iso8601Duration.Format(System.TimeSpan)">
            <summary>
            Formats a <see cref="T:System.TimeSpan"/> as an ISO 8601 duration string.
            </summary>
            <remarks>
            The year (Y) and month (M) designators are currently unsupported. The largest
            designator this method will return is weeks (W).
            <para>
            These are problematic because of things like leap years, Daylight Savings Time, etc.
            More information is needed in order to convert to a <see cref="T:System.TimeSpan"/>;
            for that, a more powerful library such as NodaTime would be appropriate.
            </para>
            </remarks>
            <param name="timeSpan">The time span.</param>
            <returns>An ISO 8601 string representing the duration in <paramref name="timeSpan"/>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Impl.Utility.PocoAdapter`1">
            <summary>
            Used to marshall dictionaries in Custom Data to POCOs.
            </summary>
            <typeparam name="T">The target type.</typeparam>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.UnixDate.ToLong(System.DateTimeOffset)">
            <summary>
            Get this datetime as a Unix epoch timestamp (seconds since Jan 1, 1970, midnight UTC).
            </summary>
            <param name="date">The date to convert.</param>
            <returns>Seconds since Unix epoch.</returns>
        </member>
        <member name="M:Stormpath.SDK.Impl.Utility.UnixDate.ToLong(System.Nullable{System.DateTimeOffset})">
            <summary>
            Gets this datetime as a Unix epoch timestamp (seconds since Jan 1, 1970, midnight UTC).
            </summary>
            <param name="date">The date to convert.</param>
            <returns>Seconds since Unix epoch, or <see langword="null"/> if <paramref name="date"/> is null.</returns>
        </member>
        <member name="T:Stormpath.SDK.Jwt.Jwts">
            <summary>
            Utility class for creating <see cref="T:Stormpath.SDK.Jwt.IJwtClaimsBuilder"/> instances, used for constructing <see cref="T:Stormpath.SDK.Jwt.IJwtClaims"/> instances.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Jwt.Jwts.NewClaimsBuilder">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Jwt.IJwtClaimsBuilder"/>, used to construct <see cref="T:Stormpath.SDK.Jwt.IJwtClaims"/> instances.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Jwt.IJwtClaimsBuilder"/>.</returns>
        </member>
        <member name="T:Stormpath.SDK.RetrievalOptionsExpandExtensions">
            <summary>
            Provides a set of static methods for getting expanded responses from creation and update requests.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IAccountExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IApplicationExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Directory.IDirectory},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IDirectoryExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Group.IGroup},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IGroupExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Organization.IOrganization},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IOrganizationExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Organization.IOrganizationAccountStoreMapping},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IOrganizationAccountStoreMappingExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Group.IGroupMembership},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IGroupMembershipExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.AccountStore.IAccountStoreMapping},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IAccountStoreMappingExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplicationAccountStoreMapping},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IAccountStoreMappingExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Tenant.ITenant},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.ITenantExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IAuthenticationResultExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Api.IApiKey},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IApiKeyExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IFactor},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IFactorExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.ISmsFactor},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.ISmsFactorExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IPhone},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IPhoneExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="M:Stormpath.SDK.RetrievalOptionsExpandExtensions.Expand(Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IChallenge},System.Linq.Expressions.Expression{System.Func{Stormpath.SDK.Linq.Expandables.IChallengeExpandables,System.Object}})">
            <summary>
            Retrieves additional data in this request from a linked resource. This has no effect if caching is disabled on the <see cref="T:Stormpath.SDK.Client.IClient">Client</see> object.
            </summary>
            <param name="options">The options for this request.</param>
            <param name="selector">A function to select a resource-returning method to expand.</param>
            <returns>The current instance for method chaining.</returns>
        </member>
        <member name="T:Stormpath.SDK.Oauth.OauthRequests">
            <summary>
            Static entry point for working with OAuth 2.0 requests.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Oauth.OauthRequests.NewPasswordGrantRequest">
            <summary>
            Start a new Password Grant request.
            </summary>
            <returns>
            A new <see cref="T:Stormpath.SDK.Oauth.IPasswordGrantRequestBuilder"/> instance, used to construct <see cref="T:Stormpath.SDK.Oauth.IPasswordGrantRequest">Password Grant requests</see>.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Oauth.OauthRequests.NewJwtAuthenticationRequest">
            <summary>
            Start a new JSON Web Token Authentication request.
            </summary>
            <returns>
            A new <see cref="T:Stormpath.SDK.Oauth.IJwtAuthenticationRequestBuilder"/> instance, used to construct <see cref="T:Stormpath.SDK.Oauth.IJwtAuthenticationRequest">JWT Authentication requests</see>.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Oauth.OauthRequests.NewIdSiteTokenAuthenticationRequest">
            <summary>
            Start a new ID Site Token Authentication request.
            </summary>
            <returns>
            A new <see cref="T:Stormpath.SDK.Oauth.IIdSiteTokenAuthenticationRequestBuilder"/> instance, used to construct <see cref="T:Stormpath.SDK.Oauth.IIdSiteTokenAuthenticationRequest">ID Site Token Authentication requests</see>.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Oauth.OauthRequests.NewRefreshGrantRequest">
            <summary>
            Start a new Refresh Grant request.
            </summary>
            <returns>
            A new <see cref="T:Stormpath.SDK.Oauth.IRefreshGrantRequestBuilder"/> instance, used to construct <see cref="T:Stormpath.SDK.Oauth.IRefreshGrantRequest">Refresh Grant requests</see>.
            </returns>
        </member>
        <member name="T:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder">
            <summary>
            A builder to construct <see cref="T:Stormpath.SDK.Organization.IOrganizationCreationOptions"/> instances.
            </summary>
        </member>
        <member name="P:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder.CreateDirectory">
            <summary>
            Gets or sets a value indicating whether to create a new <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> along with the new Organization.
            </summary>
            <value>
            <para>
            If <see langword="true"/>, a new Directory will be created. The new Directory will automatically be assigned as the Organization's
            default Account and Group store.
            If the <see cref="P:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder.DirectoryName"/> property is not null, the new Directory will be created with that name.
            Otherwise, the Directory will be automatically named based on heuristics to ensure a guaranteed unique name based on the Organization.
            </para>
            <para>
            If <see langword="false"/>, no Directory will be created.
            </para>
            </value>
        </member>
        <member name="P:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder.ResponseOptions">
            <summary>
            Gets the response options to apply to the request.
            </summary>
            <value>The response options to apply to the request.</value>
            <example>
            <code source="CreationOptionsBuilderExamples.cs" region="RequestCustomData" lang="C#" title="Request and cache Custom Data" />
            </example>
        </member>
        <member name="P:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder.DirectoryName">
            <summary>
            Gets or sets the name to use when creating a new <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> for this Organization.
            </summary>
            <value>
            Default value: <see langword="null"/>.
            <para>The name to assign to the new Directory. This only has an effect if <see cref="P:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder.CreateDirectory"/> is <see langword="true"/>.</para>
            <para>If you want to have a default name assigned automatically, set this to <see cref="F:System.String.Empty"/> or <see langword="null"/>.</para>
            </value>
        </member>
        <member name="M:Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder.Build">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Organization.IOrganizationCreationOptions"/> instance based on the current builder state.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Organization.IOrganizationCreationOptions"/> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Provider.ClientProviderExtensions">
            <summary>
            Provides a set of static methods for making Provider-based requests.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Provider.ClientProviderExtensions.Providers(Stormpath.SDK.Client.IClient)">
            <summary>
            Returns a new <see cref="T:Stormpath.SDK.Provider.IProviderFactory"/>, used to construct Provider-based requests.
            </summary>
            <param name="client">The client.</param>
            <returns>A new <see cref="T:Stormpath.SDK.Provider.IProviderFactory"/>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Serialization.SerializeFactoryAutodetectExtensions">
            <summary>
            Provides access to the plugin autodetection behavior.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Serialization.SerializeFactoryAutodetectExtensions.AutoDetect(Stormpath.SDK.Serialization.ISerializerFactory)">
            <summary>
            Automatically detects the serializer plugin to use.
            </summary>
            <param name="factory">The plugin factory.</param>
            <returns>A builder capable of building <see cref="T:Stormpath.SDK.Serialization.IJsonSerializer"/> instances.</returns>
        </member>
        <member name="T:Stormpath.SDK.Serialization.Serializers">
            <summary>
            Static entry point for creating <see cref="T:Stormpath.SDK.Serialization.IJsonSerializer">serializer</see> instances.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Serialization.Serializers.Create">
            <summary>
            Gets a new <see cref="T:Stormpath.SDK.Serialization.ISerializerFactory">factory</see> instance.
            </summary>
            <returns>A new <see cref="T:Stormpath.SDK.Serialization.ISerializerFactory">factory</see> instance.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccessTokenExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IAccessToken"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccessTokenExtensions.GetAccount(Stormpath.SDK.Oauth.IAccessToken)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccessTokenExtensions.GetAccount(Stormpath.SDK.Oauth.IAccessToken,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}})">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>
            with the specified retrieval options.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccessTokenExtensions.GetApplication(Stormpath.SDK.Oauth.IAccessToken)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccessTokenExtensions.GetApplication(Stormpath.SDK.Oauth.IAccessToken,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication}})">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>
            with the specified retrieval options.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IAccessToken">AccessToken</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccountCreationActionsExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Account.IAccountCreationActions"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountCreationActionsExtensions.CreateAccount(Stormpath.SDK.Account.IAccountCreationActions,Stormpath.SDK.Account.IAccount,System.Action{Stormpath.SDK.Account.AccountCreationOptionsBuilder})">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to this application.
            </summary>
            <param name="source">The source object.</param>
            <param name="account">The account to create/persist.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/>,
            which will be used when sending the request.</param>
            <example>
            If you would like to force disabling the backing directory's account registration workflow:
            <code>
            app.CreateAccount(theAccount, options => options.RegistrationWorkflowEnabled = false);
            </code>
            </example>
            <returns>The persisted account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> does not have a dedicated
             <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> or if the designated <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/>
             does not allow new accounts to be created.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountCreationActionsExtensions.CreateAccount(Stormpath.SDK.Account.IAccountCreationActions,Stormpath.SDK.Account.IAccount,Stormpath.SDK.Account.IAccountCreationOptions)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to this application.
            </summary>
            <param name="source">The source object.</param>
            <param name="account">The account to create/persist.</param>
            <param name="creationOptions">An <see cref="T:Stormpath.SDK.Account.IAccountCreationOptions"/> instance to use when sending the request.</param>
            <returns>The persisted account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> does not have a dedicated
             <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> or if the designated <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/>
             does not allow new accounts to be created.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountCreationActionsExtensions.CreateAccount(Stormpath.SDK.Account.IAccountCreationActions,Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to this application.
            </summary>
            <param name="source">The source object.</param>
            <param name="account">The account to create/persist.</param>
            <returns>The persisted account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> does not have a dedicated
             <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> or if the designated <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/>
             does not allow new accounts to be created.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountCreationActionsExtensions.CreateAccount(Stormpath.SDK.Account.IAccountCreationActions,System.String,System.String,System.String,System.String)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to this application, with the default creation options.
            </summary>
            <param name="source">The source object.</param>
            <param name="givenName">The given name (aka 'first name' in Western cultures).</param>
            <param name="surname">The surname (aka 'last name' in Western cultures).</param>
            <param name="email">The account's email address, which must be unique among all other accounts within a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</param>
            <param name="password">The account's raw (plaintext) password.</param>
            <returns>The persisted account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> does not have a dedicated
             <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> or if the designated <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/>
             does not allow new accounts to be created.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountCreationActionsExtensions.CreateAccount(Stormpath.SDK.Account.IAccountCreationActions,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to this application, with the default creation options.
            </summary>
            <param name="source">The source object.</param>
            <param name="givenName">The given name (aka 'first name' in Western cultures).</param>
            <param name="surname">The surname (aka 'last name' in Western cultures).</param>
            <param name="email">The account's email address, which must be unique among all other accounts within a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</param>
            <param name="password">The account's raw (plaintext) password.</param>
            <param name="customData">An anonymous type containing name/value pairs to be stored in this account's <see cref="T:Stormpath.SDK.CustomData.ICustomData">Custom Data</see>.</param>
            <returns>The persisted account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> does not have a dedicated
             <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/> or if the designated <see cref="T:Stormpath.SDK.AccountStore.IAccountStore"/>
             does not allow new accounts to be created.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccountExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.GetDirectory(Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronously gets The account.'s parent <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> (where The account. is stored).
            </summary>
            <param name="account">The account.</param>
            <returns>The account's directory.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.AddGroup(Stormpath.SDK.Account.IAccount,Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronously assigns this account to the specified <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
            <param name="account">The account.</param>
            <param name="group">The Group this account will be added to.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created reflecting The account.-to-group association.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.AddGroup(Stormpath.SDK.Account.IAccount,System.String)">
            <summary>
            Synchronously assigns this account to the specified <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> represented
            by its (case-insensitive) name or <c>href</c>.
            </summary>
            <param name="account">The account.</param>
            <param name="hrefOrName">The <c>href</c> or name of the group to add.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created reflecting The account.-to-group association.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.RemoveGroup(Stormpath.SDK.Account.IAccount,Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronously removes this <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> from the specified <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
            <param name="account">The account.</param>
            <param name="group">The group object from which The account. must be removed.</param>
            <returns>Whether the operation succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">The account. does not belong to the specified group.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.RemoveGroup(Stormpath.SDK.Account.IAccount,System.String)">
            <summary>
            Synchronously removes this <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> from the specified <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>
            represented by its (case-insensitive) name or <c>href</c>.
            </summary>
            <param name="account">The account.</param>
            <param name="hrefOrName">The <c>href</c> or name of the group object from which The account. must be removed.</param>
            <returns>Whether the operation succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">The account. does not belong to the specified group.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.IsMemberOfGroup(Stormpath.SDK.Account.IAccount,System.String)">
            <summary>
            Synchronously gets whether this account belongs to the group whose name or <c>href</c> is
            (case-insensitive) equal to the specified value.
            </summary>
            <param name="account">The account.</param>
            <param name="hrefOrName">The <c>href</c> or name of the group to check.</param>
            <returns><see langword="true"/> if The account. belongs to the specified group.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.GetProviderData(Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Provider.IProviderData"/> Resource belonging to the account.
            </summary>
            <param name="account">The account.</param>
            <returns>The ProviderData Resource belonging to the account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.CreateApiKey(Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see> assigned to this account on the Stormpath server and returns the created resource.
            </summary>
            <remarks>
            The returned API Key's <see cref="P:Stormpath.SDK.Api.IApiKey.Secret">secret</see> is considered
            <em>extremely</em> sensitive. Stormpath strongly recommends that you make newly generated API Keys accessible
            to your accounts via a file download that stays secure on their file system.
            </remarks>
            <param name="account">The account.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see>.</returns>
            <seealso cref="T:Stormpath.SDK.Auth.ApiKeyRequestBuilder"/>
            <see cref="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Auth.IAuthenticationRequest)"/>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountExtensions.CreateApiKey(Stormpath.SDK.Account.IAccount,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Api.IApiKey}})">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see> assigned to this account on the Stormpath server and returns the created resource.
            </summary>
            <remarks>
            The returned API Key's <see cref="P:Stormpath.SDK.Api.IApiKey.Secret">secret</see> is considered
            <em>extremely</em> sensitive. Stormpath strongly recommends that you make newly generated API Keys accessible
            to your accounts via a file download that stays secure on their file system.
            </remarks>
            <param name="account">The account.</param>
            <param name="retrievalOptionsAction">The options to apply to the request.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see>.</returns>
            <seealso cref="T:Stormpath.SDK.Auth.ApiKeyRequestBuilder"/>
            <see cref="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Auth.IAuthenticationRequest)"/>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccountResultExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.IdSite.IAccountResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountResultExtensions.GetAccount(Stormpath.SDK.IdSite.IAccountResult)">
            <summary>
            Synchronously returns the user account that either logged in or was created as a result of registration on the ID Site.
            You can determine if the account is newly registered if <see cref="P:Stormpath.SDK.IdSite.IAccountResult.IsNewAccount"/> is <see langword="true"/>.
            If <see cref="P:Stormpath.SDK.IdSite.IAccountResult.IsNewAccount"/> is <see langword="false"/>, the account reflects a previously-registered user
            that has logged in.
            </summary>
            <param name="source">The account result.</param>
            <returns>The user's <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> resource.</returns>
            <exception cref="T:System.Exception">The account is not present.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreContainer`1"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.GetDefaultAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0})">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> (either a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> or <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>)
            used to persist new <see cref="T:Stormpath.SDK.Account.IAccount">Accounts</see>, or <see langword="null"/> if no default Account Store has been designated.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <returns>The default <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> for new <see cref="T:Stormpath.SDK.Account.IAccount">Accounts</see>,
            or <see langword="null"/> if no default <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> has been designated.</returns>
            <example>
            Getting and using the default account store:
            <code>
            var accountStore = application.GetDefaultAccountStore();
            var accountStoreAsDirectory = accountStore as IDirectory;
            var accountStoreAsGroup = accountStore as IGroup;
            if (accountStoreAsDirectory != null)
                // use as directory
            else if (accountStoreAsGroup != null)
                // use as group
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.SetDefaultAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronously sets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> (either a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> or a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>)
            used to persist new <see cref="T:Stormpath.SDK.Account.IAccount">Accounts</see>.
            </summary>
            <remarks>
            Because this resource is not an <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> itself, it delegates to a Group or Directory
            when creating accounts; this method sets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> to which new account persistence is delegated.
            </remarks>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="accountStore">The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used to persist new accounts.</param>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.GetDefaultGroupStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0})">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used to persist new <see cref="T:Stormpath.SDK.Group.IGroup">Groups</see>, or <see langword="null"/>
            if no default Account Store has been designated.
            </summary>
            <remarks>
            Stormpath's current REST API requires this to be a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.
            However, this could be a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> in the future, so do not assume it is always a
            Directory if you want your code to be function correctly if/when this support is added.
            </remarks>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <returns>The default <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> for new <see cref="T:Stormpath.SDK.Group.IGroup">Groups</see>,
            or <see langword="null"/> if no default <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> has been designated.</returns>
            <example>
            Getting and using the default group store:
            <code>
            var groupStore = application.GetDefaultGroupStore();
            var groupStoreAsDirectory = groupStore as IDirectory;
            var groupStoreAsGroup = groupStore as IGroup;
            if (groupStoreAsDirectory != null)
                // use as directory
            else if (groupStoreAsGroup != null)
                // use as group
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.SetDefaultGroupStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronously sets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> (a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>)
            used to persist new <see cref="T:Stormpath.SDK.Group.IGroup">Groups</see>.
            </summary>
            <remarks>
            <para>
            Stormpath's current REST API requires this to be a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>. However, this could be a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> in the future,
            so do not assume it is always a Directory if you want your code to function properly if/when this support is added.
            </para>
            <para>
            Because this resource is not an <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> itself, it delegates to a Directory
            when creating groups; this method sets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> to which new group persistence is delegated.
            </para>
            </remarks>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="accountStore">The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used to persist new groups.</param>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.CreateAccountStoreMapping``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},``0)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>, allowing the associated Account Store
            to be used a source of accounts that may log in to the Application or Organization.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="mapping">The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/> resource to add to the AccountStoreMapping list.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The AccountStoreMapping's ListIndex is negative, or the mapping could not be added to the Application or Organization.</exception>
            <example>
            Setting a new <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>'s <see cref="P:Stormpath.SDK.AccountStore.IAccountStoreMapping`1.ListIndex"/> to <c>500</c> and then adding the mapping to
            an application with an existing 3-item list will automatically save the <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>
            at the end of the list and set its <see cref="P:Stormpath.SDK.AccountStore.IAccountStoreMapping`1.ListIndex"/> value to <c>3</c> (items at index 0, 1, 2 were the original items,
            the new fourth item will be at index 3):
            <code>
            IAccountStore directoryOrGroup = GetDirectoryOrGroup();
            IAccountStoreMapping mapping = client.Instantiate&lt;IAccountStoreMapping&gt;();
            mapping.SetAccountStore(directoryOrGroup);
            mapping.SetListIndex(500);
            mapping = application.CreateAccountStoreMapping(mapping);
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.AddAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronously adds a new <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> to the Application or Organization and appends the resulting <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>
            to the end of the AccountStoreMapping list.
            </summary>
            <remarks>
            If you need to control the order of the added AccountStore, use the <see cref="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.CreateAccountStoreMapping``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},``0)"/> method.
            </remarks>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="accountStore">The new <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> resource to add to the AccountStoreMapping list.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource already exists as an account store in this Application or Organization.</exception>
            <example>
            <code>
            IAccountStore directoryOrGroup = GetDirectoryOrGroup();
            IAccountStoreMapping mapping = application.AddAccountStore(directoryOrGroup);
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreContainerExtensions.AddAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{``0},System.String)">
            <summary>
            Synchronously adds a new <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> to the Application or Organization. The given string can either be an <c>href</c> or a name of a
            <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> or <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> belonging to the current <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>.
            </summary>
            <remarks>
            <para>
            If the provided value is an <c>href</c>, this method will get the proper Resource and add it as a new AccountStore in this
            Application or Organization without much effort. However, if the provided value is not an <c>href</c>, it will be considered as a name. In this case,
            this method will search for both a Directory and a Group whose names equal the provided <paramref name="hrefOrName"/>. If only
            one resource exists (either a Directory or a Group), then it will be added as a new AccountStore in this Application or Organization. However,
            if there are two resources (a Directory and a Group) matching that name, a <see cref="T:Stormpath.SDK.Error.ResourceException"/> will be thrown.
            </para>
            <para>
            Note: When using names this method is not efficient as it will search for both Directories and Groups within this Tenant
            for a matching name. In order to do so, some looping takes place at the client side: groups exist within directories, therefore we need
            to loop through every existing directory in order to find the required Group. In contrast, providing the Group's <c>href</c> is much more
            efficient as no actual search operation needs to be carried out.
            </para>
            </remarks>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="container">The Account Store container.</param>
            <param name="hrefOrName">Either the <c>href</c> or name of the desired <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> or <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</param>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource already exists as an account store in this Application or Organization.</exception>
            <exception cref="T:System.ArgumentException">The given <paramref name="hrefOrName"/> matches more than one resource in the current Tenant.</exception>
            <example>
            Providing an href:
            <code>
            IAccountStoreMapping accountStoreMapping = application.AddAccountStore("https://api.stormpath.com/v1/groups/myGroupHref");
            </code>
            Providing a name:
            <code>
            IAccountStoreMapping accountStoreMapping = application.AddAccountStore("Foo Name");
            </code>
            </example>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncApplicationAccountStoreContainerExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreContainer`1"/>
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationAccountStoreContainerExtensions.AddAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{Stormpath.SDK.Application.IApplicationAccountStoreMapping},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>
            Synchronously adds a resource of type <typeparamref name="T"/> as a new <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> to the Application. The provided query
            must match a single <typeparamref name="T"/> in the current <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>. If no compatible resource matches the query, this method will return <see langword="null"/>.
            </summary>
            <param name="container">The Application.</param>
            <param name="query">Query to search for a resource of type <typeparamref name="T"/> in the current Tenant.</param>
            <typeparam name="T">The type of resource (either a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> or a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>) to query for.</typeparam>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>, or <see langword="null"/> if there is no resource matching the query.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The found resource already exists as an account store in the application.</exception>
            <exception cref="T:System.ArgumentException">The query matches more than one resource in the current Tenant.</exception>
            <example>
            Adding a directory by partial name:
            <code>
            IAccountStoreMapping mapping = application.AddAccountStore&lt;IDirectory&gt;(dirs => dirs.Where(d => d.Name.StartsWith(partialName)));
            </code>
            </example>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncOrganizationAccountStoreContainerExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreContainer`1"/>
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncOrganizationAccountStoreContainerExtensions.AddAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreContainer{Stormpath.SDK.Organization.IOrganizationAccountStoreMapping},System.Func{System.Linq.IQueryable{``0},System.Linq.IQueryable{``0}})">
            <summary>
            Synchronously adds a resource of type <typeparamref name="T"/> as a new <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> to the Organization. The provided query
            must match a single <typeparamref name="T"/> in the current <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see>. If no compatible resource matches the query, this method will return <see langword="null"/>.
            </summary>
            <param name="container">The Organization.</param>
            <param name="query">Query to search for a resource of type <typeparamref name="T"/> in the current Tenant.</param>
            <typeparam name="T">The type of resource (either a <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> or a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>) to query for.</typeparam>
            <returns>The newly-created <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>, or <see langword="null"/> if there is no resource matching the query.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The found resource already exists as an account store in the application.</exception>
            <exception cref="T:System.ArgumentException">The query matches more than one resource in the current Tenant.</exception>
            <example>
            Adding a directory by partial name:
            <code>
            IAccountStoreMapping mapping = organization.AddAccountStore&lt;IDirectory&gt;(dirs => dirs.Where(d => d.Name.StartsWith(partialName)));
            </code>
            </example>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccountStoreExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>.
            </summary>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAccountStoreMappingExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.AccountStore.IAccountStoreMapping"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreMappingExtensions.GetAccountStore``1(Stormpath.SDK.AccountStore.IAccountStoreMapping{``0})">
            <summary>
            Synchronously gets this mapping's <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> (either a <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> or <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>), to be assigned to the application.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="accountStoreMapping">The account store mapping.</param>
            <returns>The mapping's <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAccountStoreMappingExtensions.GetApplication``1(Stormpath.SDK.AccountStore.IAccountStoreMapping{``0})">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> represented by this mapping.
            </summary>
            <typeparam name="TMapping">The Account Store Mapping type.</typeparam>
            <param name="accountStoreMapping">The account store mapping.</param>
            <returns>The mapping's <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncApiKeyExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Api.IApiKey"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApiKeyExtensions.GetAccount(Stormpath.SDK.Api.IApiKey)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to which the API Key belongs.
            </summary>
            <param name="apiKey">The API Key object.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to which the API Key belongs.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncApplicationExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Auth.IAuthenticationRequest)">
            <summary>
            Synchronously authenticates an account's submitted principals and credentials (e.g. username and password).
            The account must be in one of the Application's assigned account stores.
            If not in an assigned account store, the authentication attempt will fail.
            </summary>
            <param name="application">The application.</param>
            <param name="request">Any supported <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> object (e.g. created by <see cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>).</param>
            <returns>
            The result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions.GetAccount(Stormpath.SDK.Auth.IAuthenticationResult)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            <code>
            var loginRequest = new UsernamePasswordRequestBuilder();
            loginRequest.SetUsernameOrEmail("jsmith");
            loginRequest.SetPassword("Password123#");
            var result = myApp.AuthenticateAccount(loginRequest.Build());
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Auth.IAuthenticationRequest,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult}})">
            <summary>
            Synchronously authenticates an account's submitted principals and credentials (e.g. username and password).
            The account must be in one of the Application's assigned account stores.
            If not in an assigned account store, the authentication attempt will fail.
            </summary>
            <param name="application">The application.</param>
            <param name="request">Any supported <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> object (e.g. <see cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>).</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>
            A public static  whose result is the result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions.GetAccount(Stormpath.SDK.Auth.IAuthenticationResult)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            To request and cache the account details:
            <code>
            var loginRequest = new UsernamePasswordRequestBuilder();
            loginRequest.SetUsernameOrEmail("jsmith");
            loginRequest.SetPassword("Password123#");
            var result = myApp.AuthenticateAccount(loginRequest.Build(), response => response.Expand(x => x.GetAccount()));
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Auth.UsernamePasswordRequestBuilder})">
            <summary>
            Synchronously authenticates an account's submitted principals and credentials (e.g. username and password)
            against the specified account store.
            If the account does not exist in the account store, the authentication attempt will fail.
            </summary>
            <param name="application">The application.</param>
            <param name="requestBuilder">Any supported <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> object (e.g. created by <see cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>).</param>
            <returns>
            The result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions.GetAccount(Stormpath.SDK.Auth.IAuthenticationResult)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            To attempt to authenticate against a specific account store:
            <code>
            var result = myApp.AuthenticateAccount(request =>
            {
                request.SetUsernameOrEmail("jsmith");
                request.SetPassword("Password123#");
                request.SetAccountStore(myAccountStore);
            });
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Auth.UsernamePasswordRequestBuilder},System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Auth.IAuthenticationResult}})">
            <summary>
            Synchronously authenticates an account's submitted principals and credentials (e.g. username and password)
            against the specified account store.
            If the account does not exist in the account store, the authentication attempt will fail.
            </summary>
            <param name="application">The application.</param>
            <param name="requestBuilder">Any supported <see cref="T:Stormpath.SDK.Auth.IAuthenticationRequest"/> object (e.g. created by <see cref="T:Stormpath.SDK.Auth.UsernamePasswordRequestBuilder"/>).</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>
            The result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions.GetAccount(Stormpath.SDK.Auth.IAuthenticationResult)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            To attempt to authenticate against a specific account store, and cache the returned account details:
            <code>
            var result = await myApp.AuthenticateAccount(
                request =>
                {
                    request.SetUsernameOrEmail("jsmith");
                    request.SetPassword("Password123#");
                    request.SetAccountStore(myAccountStore);
                },
                response => response.Expand(x => x.GetAccountAsync));
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,System.String,System.String)">
            <summary>
            Synchronously authenticates an account's submitted principals and credentials (e.g. username and password).
            The account must be in one of the Application's assigned account stores.
            If not in an assigned account store, the authentication attempt will fail.
            </summary>
            <param name="application">The application.</param>
            <param name="username">The account's username.</param>
            <param name="password">The account's raw (plaintext) password.</param>
            <returns>
            The result of the authentication.
            The authenticated account can be obtained from <see cref="M:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions.GetAccount(Stormpath.SDK.Auth.IAuthenticationResult)"/>.
            </returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication attempt failed.</exception>
            <example>
            <code>
            var result = myApp.AuthenticateAccount("jsmith", "Password123#");
            </code>
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.TryAuthenticateAccount(Stormpath.SDK.Application.IApplication,System.String,System.String)">
            <summary>
            Attempts to synchronously authenticate an account with the specified username and password.
            </summary>
            <remarks>If you need to obtain the authenticated account details, use <see cref="M:Stormpath.SDK.Sync.SyncApplicationExtensions.AuthenticateAccount(Stormpath.SDK.Application.IApplication,System.String,System.String)"/> instead.</remarks>
            <param name="application">The application.</param>
            <param name="username">The account's username.</param>
            <param name="password">The account's raw (plaintext) password</param>
            <returns><see langword="true"/> if the authentication attempt succeeded; <see langword="false"/> otherwise.</returns>
            <example>
            if (myApp.TryAuthenticateAccount("jsmith", "Password123#"))
            {
                // Login successful
            }
            </example>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.ExecuteOauthRequest(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Oauth.AbstractOauthGrantRequest)">
            <summary>
            Synchronously executes an OAuth request against the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.
            </summary>
            <param name="application">The application.</param>
            <param name="request">The request.</param>
            <returns>An <see cref="T:Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult">OAuth 2.0 response</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendVerificationEmail(Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Account.EmailVerificationRequestBuilder})">
            <summary>
            Synchronously triggers the delivery of a new verification email for the specified account.
            </summary>
            <remarks>
            <para>
            This method is useful in scenarios where the Account Registration and Verification workflow
            is enabled. If the welcome email has not been received by a newly registered account,
            then the user will not be able to login until the account is verified.
            </para>
            <para>This method re-sends the verification email and allows the user to verify the account.</para>
            <para>
            The <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/> must contain the username or email identifying the account.
            </para>
            </remarks>
            <param name="application">The application</param>
            <param name="requestBuilderAction">Sets the options required for the verification email request.</param>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendVerificationEmail(Stormpath.SDK.Application.IApplication,System.String)">
            <summary>
            Synchronously triggers the delivery of a new verification email for the specified account.
            </summary>
            <remarks>
            <para>
            This method is useful in scenarios where the Account Registration and Verification workflow
            is enabled. If the welcome email has not been received by a newly registered account,
            then the user will not be able to login until the account is verified.
            </para>
            <para>This method re-sends the verification email and allows the user to verify the account.</para>
            </remarks>
            <param name="application">The application</param>
            <param name="usernameOrEmail">The username or email identifying the account to send the verification email to.</param>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.NewIdSiteSyncCallbackHandler(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Http.IHttpRequest)">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.IdSite.IIdSiteSyncCallbackHandler"/> used to synchronously handle HTTP replies from your ID Site to your application's <c>callbackUri</c>,
            as described in the <see cref="M:Stormpath.SDK.Application.IApplication.NewIdSiteUrlBuilder"/> method.
            </summary>
            <param name="application">The application.</param>
            <param name="request">
            An instance of <see cref="T:Stormpath.SDK.Http.IHttpRequest"/>.
            See the <see cref="T:Stormpath.SDK.Http.HttpRequests"/> helper class to help build this from an existing request.
            </param>
            <returns>An <see cref="T:Stormpath.SDK.IdSite.IIdSiteAsyncCallbackHandler"/> that allows you customize how the <paramref name="request"/> will be handled.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.ResetPassword(Stormpath.SDK.Application.IApplication,System.String,System.String)">
            <summary>
            Synchronously verifies the password reset token (received in the user's email) and immediately
            changes the password in the same request, if the token is valid.
            </summary>
            <remarks>Once the token has been successfully used, it is immediately invalidated and can't be used again.
            If you need to change the password again, you will need to execute
            <see cref="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendPasswordResetEmail(Stormpath.SDK.Application.IApplication,System.String)"/> again in order to obtain a new password reset token.</remarks>
            <param name="application">The application.</param>
            <param name="token">The verification token, usually obtained as a request parameter by your application.</param>
            <param name="newPassword">The new password that will be set to the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> if the token is successfully validated.</param>
            <returns>The account matching the specified token.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The token is not valid.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendPasswordResetEmail(Stormpath.SDK.Application.IApplication,System.String)">
            <summary>
            Synchronously sends a password reset email for the specified account email address.
            The email will contain a password reset link that the user can click or copy into their browser address bar.
            </summary>
            <param name="application">The application.</param>
            <param name="email">An email address of an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the application.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.
            You can obtain the associated account via <see cref="M:Stormpath.SDK.Sync.SyncPasswordResetTokenExtensions.GetAccount(Stormpath.SDK.Account.IPasswordResetToken)"/>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There is no account that matches the specified email address.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendPasswordResetEmail(Stormpath.SDK.Application.IApplication,System.String,Stormpath.SDK.AccountStore.IAccountStore)">
            <summary>
            Synchronously sends a password reset email to an account in the specified <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> matching
            the specified <paramref name="email"/>. If the email does not match an account in the specified
            <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>, a <see cref="T:Stormpath.SDK.Error.ResourceException"/> will be thrown.
            If you are unsure of which of the application's mapped account stores might contain the account, use the more general
            <see cref="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendPasswordResetEmail(Stormpath.SDK.Application.IApplication,System.String)"/> method instead.
            The email will contain a password reset link that the user can click or copy into their browser address bar.
            </summary>
            <param name="application">The application.</param>
            <param name="email">An email address of an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the application.</param>
            <param name="accountStore">The AccountStore expected to contain an account with the specified email address.</param>
            <returns>A public static  whose result is the created <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.
            You can obtain the associated account via <see cref="M:Stormpath.SDK.Sync.SyncPasswordResetTokenExtensions.GetAccount(Stormpath.SDK.Account.IPasswordResetToken)"/>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">
            The specified <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> is not mapped to this application, or there is no account that matches the specified email address in the specified <paramref name="accountStore"/>.
            </exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendPasswordResetEmail(Stormpath.SDK.Application.IApplication,System.String,System.String)">
            <summary>
            Synchronously sends a password reset email to an account matching the specified <paramref name="email"/>
            in the AccountStore or Organization matching the specified <paramref name="hrefOrNameKey"/>.
            If the email does not match an account in the specified AccountStore or Organization,
            a <see cref="T:Stormpath.SDK.Error.ResourceException"/> will be thrown.
            If you are unsure of which of the application's mapped account stores might contain the account, use the more general
            <see cref="M:Stormpath.SDK.Sync.SyncApplicationExtensions.SendPasswordResetEmail(Stormpath.SDK.Application.IApplication,System.String)"/> method instead.
            The email will contain a password reset link that the user can click or copy into their browser address bar.
            </summary>
            <param name="application">The application.</param>
            <param name="email">An email address of an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that may login to the application.</param>
            <param name="hrefOrNameKey">The href of the AccountStore, or the name key of the Organization, expected to contain an account with the specified email address.</param>
            <returns>A public static  whose result is the created <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.
            You can obtain the associated account via <see cref="M:Stormpath.SDK.Sync.SyncPasswordResetTokenExtensions.GetAccount(Stormpath.SDK.Account.IPasswordResetToken)"/>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">
            The specified AccountStore or Organization is not mapped to this application, or there is no account that matches the specified email address in the AccountStore or Organization.
            </exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.VerifyPasswordResetToken(Stormpath.SDK.Application.IApplication,System.String)">
            <summary>
            Synchronously verifies a password reset token.
            </summary>
            <param name="application">The application.</param>
            <param name="token">The verification token, usually obtained as a request parameter by your application.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> matching the specified token.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The token is not valid.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.GetAccount(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Provider.IProviderAccountRequest)">
            <summary>
            Synchronously retrieves a Provider-based <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>. The account must exist in one of the Provider-based <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>
            assigned to the Application as an account store, and the Directory must also be <see cref="F:Stormpath.SDK.Directory.DirectoryStatus.Enabled">Enabled</see>.
            If not in an assigned account store, the retrieval attempt will fail.
            </summary>
            <param name="application">The application.</param>
            <param name="request">
            The <see cref="T:Stormpath.SDK.Provider.IProviderAccountRequest"/> representing the Provider-specific account access data
            (e.g. an <c>accessToken</c>) used to verify the identity.
            </param>
            <returns>The result of the access request.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The access attempt failed.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.GetOauthPolicy(Stormpath.SDK.Application.IApplication)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy">OauthPolicy</see> associated with this <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.
            </summary>
            <param name="application">The application.</param>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy">OauthPolicy</see> associated with this <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.GetSamlPolicy(Stormpath.SDK.Application.IApplication)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Saml.ISamlPolicy">SAML Policy</see> associated with this <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.
            </summary>
            <param name="application">The application.</param>
            <returns>The <see cref="T:Stormpath.SDK.Saml.ISamlPolicy">SAML Policy</see> associated with this <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.NewSamlIdpUrlBuilder(Stormpath.SDK.Application.IApplication)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Saml.ISamlIdpUrlBuilder"/> that allows you to build a URL you can use to redirect
            your application users to an external SAML Identity Provider.
            </summary>
            <param name="application">The application.</param>
            <returns>A new <see cref="T:Stormpath.SDK.Saml.ISamlIdpUrlBuilder"/> that can build a URL to redirect your users to a SAML Identity Provider.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.NewSamlSyncCallbackHandler(Stormpath.SDK.Application.IApplication,Stormpath.SDK.Http.IHttpRequest)">
            <summary>
            Creates a new <see cref="T:Stormpath.SDK.Saml.ISamlSyncCallbackHandler"/> used to handle HTTP replies from an external SAML Identity Provider to your
            application's <c>callbackUri</c>.
            </summary>
            <param name="application">The application.</param>
            <param name="request">
            An instance of <see cref="T:Stormpath.SDK.Http.IHttpRequest"/>.
            See the <see cref="T:Stormpath.SDK.Http.HttpRequests"/> helper class to help build this from an existing request.
            </param>
            <returns>A new <see cref="T:Stormpath.SDK.Saml.ISamlSyncCallbackHandler"/> that allows your to customize how the <paramref name="request"/> will be handled.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.GetApiKey(Stormpath.SDK.Application.IApplication,System.String)">
            <summary>
            Synchronously gets an <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see>, by its ID, that belongs to an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>
            that has access to this application by a mapped account store.
            </summary>
            <param name="application">The application.</param>
            <param name="apiKeyId">The API Key ID.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="apiKeyId"/> is null or empty.</exception>
            <returns>The API Key, or <see langword="null"/> if no API Key could be found.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.GetApiKey(Stormpath.SDK.Application.IApplication,System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Api.IApiKey}})">
            <summary>
            Synchronously gets an <see cref="T:Stormpath.SDK.Api.IApiKey">API Key</see>, by its ID, that belongs to an <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>
            that has access to this application by a mapped account store.
            </summary>
            <param name="application">The application.</param>
            <param name="apiKeyId">The API Key ID.</param>
            <param name="retrievalOptionsAction">The options to apply to the request.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="apiKeyId"/> is null or empty.</exception>
            <returns>The API Key, or <see langword="null"/> if no API Key could be found.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncApplicationExtensions.GetWebConfiguration(Stormpath.SDK.Application.IApplication)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Application.IApplicationWebConfiguration">Web configuration</see> for this Application.
            </summary>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplicationWebConfiguration">Web configuration</see> for this Application.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Auth.IAuthenticationResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncAuthenticationResultExtensions.GetAccount(Stormpath.SDK.Auth.IAuthenticationResult)">
            <summary>
            Synchronously gets the successfully authenticated <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.
            </summary>
            <param name="authResult">The authentication result.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> that was successfully authenticated.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncChallengeCollectionExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.IChallengeCollection">Challenge collection</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncChallengeCollectionExtensions.Add(Stormpath.SDK.Account.IChallengeCollection)">
            <summary>
            Synchronously adds a new challenge with the default options.
            </summary>
            <param name="challengeCollection">The <see cref="T:Stormpath.SDK.Account.IChallengeCollection"/>.</param>
            <returns>The newly-created challenge.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncChallengeCollectionExtensions.Add(Stormpath.SDK.Account.IChallengeCollection,Stormpath.SDK.Account.ChallengeCreationOptions)">
            <summary>
            Synchronously adds a new challenge.
            </summary>
            <param name="options">The challenge options.</param>
            <param name="challengeCollection">The <see cref="T:Stormpath.SDK.Account.IChallengeCollection"/>.</param>
            <returns>The newly-created challenge.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncChallengeExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.IChallenge">Challenge</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncChallengeExtensions.GetAccount(Stormpath.SDK.Account.IChallenge)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this challenge.
            </summary>
            <param name="challenge">The challenge.</param>
            <returns>The account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncChallengeExtensions.GetFactor(Stormpath.SDK.Account.IChallenge)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see> associated with this factor.
            </summary>
            <param name="challenge">The challenge.</param>
            <returns>The factor.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncChallengeExtensions.Submit(Stormpath.SDK.Account.IChallenge,System.String)">
            <summary>
            Submits a code and returns the updated <see cref="T:Stormpath.SDK.Account.IChallenge">Challenge</see> resource.
            </summary>
            <remarks>The <see cref="P:Stormpath.SDK.Account.IChallenge.Status"/> property will be updated with the result of the code submission.</remarks>
            <param name="challenge">The challenge.</param>
            <param name="code">The code.</param>
            <returns>The updated resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncChallengeExtensions.Validate(Stormpath.SDK.Account.IChallenge,System.String)">
            <summary>
            Submits a code and returns the result as a boolean.
            </summary>
            <remarks>Identical to the <see cref="M:Stormpath.SDK.Sync.SyncChallengeExtensions.Submit(Stormpath.SDK.Account.IChallenge,System.String)"/> method, other than the return semantics.</remarks>
            <param name="challenge">The challenge.</param>
            <param name="code">The code.</param>
            <returns><see langword="true"/> if the challenge was successful; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncClientExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Client.IClient">Client</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncClientExtensions.GetCurrentTenant(Stormpath.SDK.Client.IClient)">
            <summary>
            Synchronously gets the sole <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see> associated to this <see cref="T:Stormpath.SDK.Client.IClient">Client</see>.
            </summary>
            <param name="client">The client.</param>
            <returns>The <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see> associated to this client.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncDataStoreExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.DataStore.IDataStore"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)">
            <summary>
            Synchronously retrieves the resource at the specified <paramref name="href"/> URL synchronously and returns the resource
            as an instance of the specified class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> value.</typeparam>
            <param name="dataStore">The object implementing the <see cref="T:Stormpath.SDK.DataStore.IDataStore"/> interface.</param>
            <param name="href">The resource URL of the resource to retrieve.</param>
            <returns>An instance of the specified class based on data returned from the specified <paramref name="href"/> URL.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{``0}})">
            <summary>
            Synchronously retrieves the resource at the specified <paramref name="href"/> URL with the specified <paramref name="responseOptions"/>,
            and returns the resource as an instance of the specified class <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the returned <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> value.</typeparam>
            <param name="dataStore">The object implementing the <see cref="T:Stormpath.SDK.DataStore.IDataStore"/> interface.</param>
            <param name="href">The resource URL of the resource to retrieve.</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <returns>An instance of the specified class based on data returned from the specified <paramref name="href"/> URL.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncDirectoryExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncDirectoryExtensions.GetProvider(Stormpath.SDK.Directory.IDirectory)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Provider.IProvider">Provider</see> of this Directory.
            </summary>
            <param name="directory">The directory.</param>
            <returns>The Provider of this Directory.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncDirectoryExtensions.GetAccountCreationPolicy(Stormpath.SDK.Directory.IDirectory)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Directory.IAccountCreationPolicy">Account Creation Policy</see> for this directory.
            </summary>
            <param name="directory">The directory.</param>
            <returns>The Account Creation Policy for this Directory.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncDirectoryExtensions.GetPasswordPolicy(Stormpath.SDK.Directory.IDirectory)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Directory.IPasswordPolicy">Password Policy</see> for this directory.
            </summary>
            <param name="directory">The directory.</param>
            <returns>The Password Policy for this Directory.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncEmailVerificationRequestExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Account.IEmailVerificationRequest"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncEmailVerificationRequestExtensions.GetAccountStore(Stormpath.SDK.Account.IEmailVerificationRequest)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see> used for this request.
            </summary>
            <param name="request">The request.</param>
            <returns>The <see cref="T:Stormpath.SDK.AccountStore.IAccountStore">Account Store</see>, or <see langword="null"/> if no Account Store was set.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncExtendableExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Resource.IExtendable"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncExtendableExtensions.GetCustomData(Stormpath.SDK.Resource.IExtendable)">
            <summary>
            Synchronously gets the custom data associated with this resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The <see cref="T:Stormpath.SDK.CustomData.ICustomData">Custom Data</see> associated with this resource.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The custom data could not be loaded.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncFactorCollectionExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.IFactorCollection">Factor collection</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncFactorCollectionExtensions.Add(Stormpath.SDK.Account.IFactorCollection,Stormpath.SDK.Account.SmsFactorCreationOptions)">
            <summary>
            Synchronously adds a new SMS Factor.
            </summary>
            <param name="factorCollection">The <see cref="T:Stormpath.SDK.Account.IFactorCollection"/>.</param>
            <param name="options">The options for the new factor.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncFactorCollectionExtensions.Add(Stormpath.SDK.Account.IFactorCollection,Stormpath.SDK.Account.GoogleAuthenticatorFactorCreationOptions)">
            <summary>
            Synchronously adds a new Google Authenticator (TOTP-based) Factor.
            </summary>
            <param name="factorCollection">The <see cref="T:Stormpath.SDK.Account.IFactorCollection"/>.</param>
            <param name="options">The options for the new factor.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncFactorExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.IFactor">Factor</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncFactorExtensions.GetAccount(Stormpath.SDK.Account.IFactor)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this factor.
            </summary>
            <param name="factor">The factor.</param>
            <returns>The account.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncFactorExtensions.GetMostRecentChallenge(Stormpath.SDK.Account.IFactor)">
            <summary>
            Synchronously gets the most recent <see cref="T:Stormpath.SDK.Account.IChallenge">Challenge</see> against this factor, if any.
            </summary>
            <param name="factor">The factor.</param>
            <returns>The most recent challenge, or <see langword="null"/>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncGroupCreationExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Group.IGroupCreationActions"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupCreationExtensions.CreateGroup(Stormpath.SDK.Group.IGroupCreationActions,Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
            <param name="source">The source object.</param>
            <param name="group">The group to create.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupCreationExtensions.CreateGroup(Stormpath.SDK.Group.IGroupCreationActions,Stormpath.SDK.Group.IGroup,System.Action{Stormpath.SDK.Group.GroupCreationOptionsBuilder})">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
            <param name="source">The source object.</param>
            <param name="group">The group to create.</param>
            <param name="creationOptionsAction">
            An inline builder for an instance of <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/>, which will be used when sending the request.
            </param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupCreationExtensions.CreateGroup(Stormpath.SDK.Group.IGroupCreationActions,Stormpath.SDK.Group.IGroup,Stormpath.SDK.Group.IGroupCreationOptions)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
            <param name="source">The source object.</param>
            <param name="group">The group to create.</param>
            <param name="creationOptions">An <see cref="T:Stormpath.SDK.Group.IGroupCreationOptions"/> instance to use when sending the request.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupCreationExtensions.CreateGroup(Stormpath.SDK.Group.IGroupCreationActions,System.String,System.String)">
            <summary>
            Creates a new enabled <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> that may be used by the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> or <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.
            </summary>
            <param name="source">The source object.</param>
            <param name="name">The new Group's name.</param>
            <param name="description">The new Group's description text.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncGroupExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupExtensions.AddAccount(Stormpath.SDK.Group.IGroup,Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronously assigns the specified <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to this <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.
            </summary>
            <param name="group">The group.</param>
            <param name="account">The account to assign to this group.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created
            reflecting the group-to-account association.
            </returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupExtensions.AddAccount(Stormpath.SDK.Group.IGroup,System.String)">
            <summary>
            Synchronously assigns this <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> to the specified <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>
            represented by its (case-insensitive) <c>username</c>, <c>email</c>, or <c>href</c>
            </summary>
            <param name="group">The group.</param>
            <param name="hrefOrEmailOrUsername">The <c>href</c>, email, or username of the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to associate.</param>
            <returns>
            The new <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see> resource created
            reflecting the group-to-account association.
            </returns>
            <exception cref="T:System.InvalidOperationException">The specified account could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupExtensions.RemoveAccount(Stormpath.SDK.Group.IGroup,Stormpath.SDK.Account.IAccount)">
            <summary>
            Synchronously removes this group's association with the specified <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.
            </summary>
            <param name="group">The group.</param>
            <param name="account">The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> object to disassociate.</param>
            <returns>Whether the operation succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">The specified account does not belong to this group.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupExtensions.RemoveAccount(Stormpath.SDK.Group.IGroup,System.String)">
            <summary>
            Synchronously removes this Group's association with the specified <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>
            represented by its (case-insensitive) <c>username</c>, <c>email</c>, or <c>href</c>
            </summary>
            <param name="group">The group.</param>
            <param name="hrefOrEmailOrUsername">The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> object to disassociate.</param>
            <returns>Whether the operation succeeded.</returns>
            <exception cref="T:System.InvalidOperationException">The specified account does not belong to this group.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupExtensions.GetDirectory(Stormpath.SDK.Group.IGroup)">
            <summary>
            Synchronously gets the group's parent <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> (where the group is stored).
            </summary>
            <param name="group">The group.</param>
            <returns>The group's parent <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncGroupMembershipExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Group.IGroupMembership">Group Membership</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupMembershipExtensions.GetAccount(Stormpath.SDK.Group.IGroupMembership)">
            <summary>
            Synchronously gets this membership's <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> resource.
            </summary>
            <param name="groupMembership">The group membership object.</param>
            <returns>This membership's <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> resource.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncGroupMembershipExtensions.GetGroup(Stormpath.SDK.Group.IGroupMembership)">
            <summary>
            Synchronously gets this membership's <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> resource.
            </summary>
            <param name="groupMembership">The group membership object.</param>
            <returns>This membership's <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> resource.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncHasTenantExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Tenant.IHasTenant"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncHasTenantExtensions.GetTenant(Stormpath.SDK.Tenant.IHasTenant)">
            <summary>
            Synchronously gets the Stormpath <see cref="T:Stormpath.SDK.Tenant.ITenant">Tenant</see> that owns this resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The tenant.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncIdSiteTokenAuthenticatorExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IIdSiteTokenAuthenticator"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncIdSiteTokenAuthenticatorExtensions.Authenticate(Stormpath.SDK.Oauth.IIdSiteTokenAuthenticator,Stormpath.SDK.Oauth.IIdSiteTokenAuthenticationRequest)">
            <summary>
            Synchronously executes the OAuth 2.0 Authentication Request and returns the result.
            </summary>
            <param name="authenticator">The <see cref="T:Stormpath.SDK.Oauth.IIdSiteTokenAuthenticator"/>.</param>
            <param name="authenticationRequest">The Authentication Request this authenticator will attempt.</param>
            <returns>An Authentication Result representing the successful authentication.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication failed.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncJwtAuthenticatorExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IJwtAuthenticator"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncJwtAuthenticatorExtensions.Authenticate(Stormpath.SDK.Oauth.IJwtAuthenticator,Stormpath.SDK.Oauth.IJwtAuthenticationRequest)">
            <summary>
            Synchronously executes the OAuth 2.0 Authentication Request and returns the result.
            </summary>
            <param name="authenticator">The <see cref="T:Stormpath.SDK.Oauth.IJwtAuthenticator"/>.</param>
            <param name="authenticationRequest">The Authentication Request this authenticator will attempt.</param>
            <returns>An Authentication Result representing the successful authentication.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication failed.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncOauthGrantAuthenticationResult">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncOauthGrantAuthenticationResult.GetAccessToken(Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see> created during the Create Grant Authentication operation.
            </summary>
            <param name="authenticationResult">The <see cref="T:Stormpath.SDK.Oauth.IOauthGrantAuthenticationResult">Authentication Result</see>.</param>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncOauthPolicyExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncOauthPolicyExtensions.GetApplication(Stormpath.SDK.Oauth.IOauthPolicy)">
            <summary>
            Synchronously returns the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy">OauthPolicy</see>.
            </summary>
            <param name="policy">The policy.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IOauthPolicy">OauthPolicy</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncOrganizationAccountStoreMappingExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Organization.IOrganizationAccountStoreMapping"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncOrganizationAccountStoreMappingExtensions.GetOrganization(Stormpath.SDK.Organization.IOrganizationAccountStoreMapping)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> represented by this mapping.
            </summary>
            <param name="accountStoreMapping">The account store mapping.</param>
            <returns>The mapping's <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncPasswordGrantAuthenticatorExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IPasswordGrantAuthenticator"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncPasswordGrantAuthenticatorExtensions.Authenticate(Stormpath.SDK.Oauth.IPasswordGrantAuthenticator,Stormpath.SDK.Oauth.IPasswordGrantRequest)">
            <summary>
            Synchronously executes the OAuth 2.0 Authentication Request and returns the result.
            </summary>
            <param name="authenticator">The <see cref="T:Stormpath.SDK.Oauth.IPasswordGrantAuthenticator"/>.</param>
            <param name="authenticationRequest">The Authentication Request this authenticator will attempt.</param>
            <returns>An Authentication Result representing the successful authentication.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication failed.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncPasswordPolicyExtensions">
            <summary>
            Provides synchronous access to the methods available on a <see cref="T:Stormpath.SDK.Directory.IPasswordPolicy">Password Policy</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncPasswordPolicyExtensions.GetPasswordStrengthPolicy(Stormpath.SDK.Directory.IPasswordPolicy)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Directory.IPasswordStrengthPolicy">Password Strength Policy</see> for this <see cref="T:Stormpath.SDK.Directory.IDirectory"/>.
            </summary>
            <param name="passwordPolicy">The directory's <see cref="T:Stormpath.SDK.Directory.IPasswordPolicy">Password Policy</see>.</param>
            <returns>The Password Strength Policy for this Directory.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncPasswordResetTokenExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Account.IPasswordResetToken">Password Reset Token</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncPasswordResetTokenExtensions.GetAccount(Stormpath.SDK.Account.IPasswordResetToken)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this password reset token.
            </summary>
            <param name="token">The token.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> in the reset password workflow.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncPhoneCollectionExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.IPhoneCollection">Phone collection</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncPhoneCollectionExtensions.Add(Stormpath.SDK.Account.IPhoneCollection,System.String)">
            <summary>
            Synchronously adds a new phone.
            </summary>
            <param name="phoneCollection">The <see cref="T:Stormpath.SDK.Account.IPhoneCollection"/>.</param>
            <param name="number">The phone number.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncPhoneCollectionExtensions.Add(Stormpath.SDK.Account.IPhoneCollection,Stormpath.SDK.Account.PhoneCreationOptions)">
            <summary>
            Synchronously adds a new phone with the specified options.
            </summary>
            <param name="phoneCollection">The <see cref="T:Stormpath.SDK.Account.IPhoneCollection"/>.</param>
            <param name="options">The phone creation options.</param>
            <returns>The new <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncPhoneExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncPhoneExtensions.GetAccount(Stormpath.SDK.Account.IPhone)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this phone.
            </summary>
            <param name="phone">The phone.</param>
            <returns>The account.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncQueryableExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Linq.IAsyncQueryable`1"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncQueryableExtensions.Synchronously``1(Stormpath.SDK.Linq.IAsyncQueryable{``0})">
            <summary>
            Provides synchronous access to a collection resource.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">An asynchronous data source to query synchronously.</param>
            <returns>A <see cref="T:System.Linq.IQueryable`1"/> that will execute all requests synchronously.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncRefreshGrantAuthenticatorExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Oauth.IRefreshGrantAuthenticator"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncRefreshGrantAuthenticatorExtensions.Authenticate(Stormpath.SDK.Oauth.IRefreshGrantAuthenticator,Stormpath.SDK.Oauth.IRefreshGrantRequest)">
            <summary>
            Synchronously executes the OAuth 2.0 Authentication Request and returns the result.
            </summary>
            <param name="authenticator">The <see cref="T:Stormpath.SDK.Oauth.IRefreshGrantAuthenticator"/>.</param>
            <param name="authenticationRequest">The Authentication Request this authenticator will attempt.</param>
            <returns>An Authentication Result representing the successful authentication.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The authentication failed.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncRefreshTokenExtensions">
            <summary>
            Provides synchronous Refresh to the methods available on <see cref="T:Stormpath.SDK.Oauth.IRefreshToken"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncRefreshTokenExtensions.GetAccount(Stormpath.SDK.Oauth.IRefreshToken)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.
            </summary>
            <param name="refreshToken">The Refresh token.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncRefreshTokenExtensions.GetAccount(Stormpath.SDK.Oauth.IRefreshToken,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}})">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.
            </summary>
            <param name="refreshToken">The Refresh token.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
            <param name="retrievalOptions">The retrieval options.</param>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncRefreshTokenExtensions.GetApplication(Stormpath.SDK.Oauth.IRefreshToken)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.
            </summary>
            <param name="refreshToken">The Refresh token.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncRefreshTokenExtensions.GetApplication(Stormpath.SDK.Oauth.IRefreshToken,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Application.IApplication}})">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.
            </summary>
            <param name="refreshToken">The Refresh token.</param>
            <param name="retrievalOptions">The retrieval options.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> associated with this <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">RefreshToken</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncResourceExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncResourceExtensions.Save``1(Stormpath.SDK.Resource.ISaveable{``0})">
            <summary>
            Synchronously creates or updates the resource.
            </summary>
            <param name="resource">The resource.</param>
            <typeparam name="T">The <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type.</typeparam>
            <returns>The persisted resource data.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The save operation failed.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncResourceExtensions.Save``1(Stormpath.SDK.Resource.ISaveableWithOptions{``0},System.Action{Stormpath.SDK.Resource.IRetrievalOptions{``0}})">
            <summary>
            Synchronously creates or updates the resource, and returns the persisted resource data with the specified <paramref name="responseOptions"/>.
            </summary>
            <param name="resource">The resource.</param>
            <param name="responseOptions">The options to apply to this request.</param>
            <typeparam name="T">The <see cref="T:Stormpath.SDK.Resource.IResource">Resource</see> type.</typeparam>
            <returns>The persisted resource data.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The save operation failed.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncResourceExtensions.Delete(Stormpath.SDK.Resource.IDeletable)">
            <summary>
            Synchronously deletes the resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>Whether the delete operation succeeded.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The delete operation failed.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncSamlAccountResultExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Saml.ISamlAccountResult"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncSamlAccountResultExtensions.GetAccount(Stormpath.SDK.Saml.ISamlAccountResult)">
            <summary>
            Synchronously gets the user account returned by the SAML Identity Provider.
            </summary>
            <param name="samlAccountResult">The <see cref="T:Stormpath.SDK.Saml.ISamlAccountResult"/>.</param>
            <returns>The user's <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> resource.</returns>
            <exception cref="T:System.Exception">The account is not present.</exception>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncSamlPolicyExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Saml.ISamlPolicy"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncSamlPolicyExtensions.GetSamlServiceProvider(Stormpath.SDK.Saml.ISamlPolicy)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Saml.ISamlServiceProvider">SAML Service Provider</see> resource associated with this <see cref="T:Stormpath.SDK.Saml.ISamlPolicy">SAML Policy</see>.
            </summary>
            <param name="samlPolicy">The SAML Policy.</param>
            <returns>The <see cref="T:Stormpath.SDK.Saml.ISamlServiceProvider">SAML Service Provider</see>.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncSamlServiceProviderExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Saml.ISamlServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncSamlServiceProviderExtensions.GetSsoInitiationEndpoint(Stormpath.SDK.Saml.ISamlServiceProvider)">
            <summary>
            Synchronously gets the endpoint resource used to initiate SAML-based Single Sign-On.
            </summary>
            <param name="samlServiceProvider">The <see cref="T:Stormpath.SDK.Saml.ISamlServiceProvider"/>.</param>
            <returns>The endpoint resource used to initiate SAML-based Single Sign-On.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncSmsFactorExtensions">
            <summary>
            Provides synchronous access to the methods available on the <see cref="T:Stormpath.SDK.Account.ISmsFactor">SMS Factor</see> resource.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncSmsFactorExtensions.GetPhone(Stormpath.SDK.Account.ISmsFactor)">
            <summary>
            Synchronously gets the <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see> associated with this factor.
            </summary>
            <param name="smsFactor">The factor.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IPhone">Phone</see> associated with this factor.</returns>
        </member>
        <member name="T:Stormpath.SDK.Sync.SyncTenantActionsExtensions">
            <summary>
            Provides synchronous access to the methods available on <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/>.
            </summary>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateApplication(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Application.IApplication,System.Action{Stormpath.SDK.Application.ApplicationCreationOptionsBuilder})">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> resource in the current tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Application.ApplicationCreationOptionsBuilder"/>,
            which will be used when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the application.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateApplication(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Application.IApplication,Stormpath.SDK.Application.IApplicationCreationOptions)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> resource in the current tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <param name="creationOptions">An <see cref="T:Stormpath.SDK.Application.IApplicationCreationOptions"/> instance to use when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the application.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateApplication(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Application.IApplication)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> resource in the current tenant, with the default creation options.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="application">The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to create.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the application.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateApplication(Stormpath.SDK.Tenant.ITenantActions,System.String,System.Boolean)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> resource in the current tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="name">The name of the application.</param>
            <param name="createDirectory">Whether a default directory should be created automatically.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the application.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateDirectory(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Directory.IDirectory)">
            <summary>
            Synchronously creates a new Cloud Directory resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="directory">The Directory resource to create.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the directory.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateDirectory(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Directory.IDirectory,System.Action{Stormpath.SDK.Directory.DirectoryCreationOptionsBuilder})">
            <summary>
            Synchronously creates a new Provider-based Directory resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="directory">The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/>,
            which will be used when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the directory.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateDirectory(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Directory.IDirectory,Stormpath.SDK.Directory.IDirectoryCreationOptions)">
            <summary>
            Synchronously creates a new Cloud- or Provider-based Directory resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="directory">The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to create.</param>
            <param name="creationOptions">A <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> instance to use when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the directory.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateDirectory(Stormpath.SDK.Tenant.ITenantActions,System.String,System.String,Stormpath.SDK.Directory.DirectoryStatus)">
            <summary>
            Synchronously creates a new Cloud Directory resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="name">The directory name.</param>
            <param name="description">The directory description.</param>
            <param name="status">The initial directory status.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the directory.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateOrganization(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Organization.IOrganization)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="organization">The Organization to create.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateOrganization(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Organization.IOrganization,System.Action{Stormpath.SDK.Organization.OrganizationCreationOptionsBuilder})">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="organization">The Organization to create.</param>
            <param name="creationOptionsAction">An inline builder for an instance of <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/>,
            which will be used when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateOrganization(Stormpath.SDK.Tenant.ITenantActions,Stormpath.SDK.Organization.IOrganization,Stormpath.SDK.Organization.IOrganizationCreationOptions)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="organization">The Organization to create.</param>
            <param name="creationOptions">A <see cref="T:Stormpath.SDK.Directory.IDirectoryCreationOptions"/> instance to use when sending the request.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.CreateOrganization(Stormpath.SDK.Tenant.ITenantActions,System.String,System.String)">
            <summary>
            Synchronously creates a new <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> resource in the Tenant.
            </summary>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="name">The Organization's name.</param>
            <param name="nameKey">The Organization's <c>nameKey</c>.</param>
            <returns>The created <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">There was a problem creating the Organization.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.VerifyAccountEmail(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously verifies an account's email address based on a <c>sptoken</c> parameter embedded in a URL
            found in an account's verification email.
            </summary>
            <remarks>
            <para>
            For example:
            <code>
            https://my.company.com/email/verify?sptoken=ExAmPleEmAilVeRiFiCaTiOnTokEnHeRE
            </code>
            </para>
            <para>
            Based on this URL, the following should be invoked:
            <code>
            tenant.VerifyAccountEmailAsync("ExAmPleEmAilVeRiFiCaTiOnTokEnHeRE");
            </code>
            </para>
            </remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="token">The <c>sptoken</c> query parameter value.</param>
            <returns>The verified account.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The token was not valid.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetAccount(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetAccount(Stormpath.SDK.Tenant.ITenantActions,System.String,System.Action{Stormpath.SDK.Resource.IRetrievalOptions{Stormpath.SDK.Account.IAccount}})">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> at the specified Stormpath URL using the specified retrieval options.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Account.IAccount">Account</see> to retrieve.</param>
            <param name="retrievalOptions">The retrieval options to use.</param>
            <returns>The <see cref="T:Stormpath.SDK.Account.IAccount">Account</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetApplication(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Application.IApplication">Application</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Application.IApplication">Application</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetDirectory(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Directory.IDirectory">Directory</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetGroup(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Group.IGroup">Group</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Group.IGroup">Group</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetOrganization(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetOrganizationByNameKey(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> by the Organization <c>nameKey</c>.
            </summary>
            <remarks>This is a convenience method that looks up an <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> by its <c>nameKey</c>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="nameKey">The <c>nameKey</c> of the <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Organization.IOrganization">Organization</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetAccessToken(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IAccessToken">Access Token</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
        <member name="M:Stormpath.SDK.Sync.SyncTenantActionsExtensions.GetRefreshToken(Stormpath.SDK.Tenant.ITenantActions,System.String)">
            <summary>
            Synchronously retrieves the <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">Refresh Token</see> at the specified Stormpath URL.
            </summary>
            <remarks>This is a convenience method equivalent to <see cref="M:Stormpath.SDK.Sync.SyncDataStoreExtensions.GetResource``1(Stormpath.SDK.DataStore.IDataStore,System.String)"/>.</remarks>
            <param name="tenantActions">The object supporting the <see cref="T:Stormpath.SDK.Tenant.ITenantActions"/> interface.</param>
            <param name="href">The resource URL of the <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">Refresh Token</see> to retrieve.</param>
            <returns>The <see cref="T:Stormpath.SDK.Oauth.IRefreshToken">Refresh Token</see>.</returns>
            <exception cref="T:Stormpath.SDK.Error.ResourceException">The resource could not be found.</exception>
        </member>
    </members>
</doc>
